<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>马小宝</title>
  <subtitle>前端 生活 学习</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://maxiuli.com/"/>
  <updated>2020-04-15T15:04:35.711Z</updated>
  <id>https://maxiuli.com/</id>
  
  <author>
    <name>MaXiaoBao</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>BFC解决边距折叠</title>
    <link href="https://maxiuli.com/2020/04/13/BFC%E8%A7%A3%E5%86%B3%E8%BE%B9%E8%B7%9D%E6%8A%98%E5%8F%A0/"/>
    <id>https://maxiuli.com/2020/04/13/BFC解决边距折叠/</id>
    <published>2020-04-13T22:59:00.000Z</published>
    <updated>2020-04-15T15:04:35.711Z</updated>
    
    <content type="html"><![CDATA[<h3 id="什么是边距折叠"><a href="#什么是边距折叠" class="headerlink" title="什么是边距折叠"></a>什么是边距折叠</h3><p>当块级元素（block）的上外边距(margin-top)和下外边距(margin-bottom)同时都有设定时只会只会保留最大边距，这种行为称为外边距折叠（margin collapsing)。<a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/CSS_Box_Model/Mastering_margin_collapsing" target="_blank" rel="noopener">查看官方文档</a></p>
<a id="more"></a>
<blockquote>
<p>比如:<br>margin-bottom: 40, margin-top: 20, 边距为正取大值，最后 两个元素之间边距 40<br>margin-bottom: 40, margin-top: -20, 最后 两个元素之间边距 40 - 20 = 20<br>margin-bottom: -40 margin-top: -20 边距为负取小值，最后 两个元素之间边距 -40</p>
</blockquote>
<h3 id="BFC-解决边距折叠"><a href="#BFC-解决边距折叠" class="headerlink" title="BFC 解决边距折叠"></a>BFC 解决边距折叠</h3><p>BFC (block formatting context) 块级格式化 <a href="https://developer.mozilla.org/zh-CN/docs/Web/Guide/CSS/Block_formatting_context" target="_blank" rel="noopener">文档</a></p>
<p>何为 BFC ，只要元素满足下面任一条件即可触发 BFC 特性：</p>
<ol>
<li>body 根元素 <code>&lt;html&gt;</code></li>
<li>浮动元素：float 不为 none 的属性值</li>
<li>绝对定位：position: absolute 或 fixed</li>
<li>display 为： inline-block、table-cells、flex 、grid</li>
<li>overflow 除了 visible 以外的值 (hidden、auto、scroll)</li>
</ol>
<p>BFC 的布局规则：</p>
<ol>
<li>内部的盒子会在垂直方向，一个个地放置；</li>
<li>BFC 是页面上的一个隔离的独立容器；</li>
<li>属于同一个 BFC 的 两个相邻 Box 的 上下 margin 会发生重叠 ；</li>
<li>计算 BFC 的高度时，浮动元素也参与计算</li>
<li>BFC 的区域不会与 float 重叠；</li>
</ol>
<h3 id="BFC-还可以干什么"><a href="#BFC-还可以干什么" class="headerlink" title="BFC 还可以干什么"></a>BFC 还可以干什么</h3><blockquote>
<ol>
<li>BFC 可以包含浮动的元素（清除浮动）</li>
</ol>
</blockquote>
<p></p><p class="codepen" data-height="265" data-theme-id="dark" data-default-tab="html,result" data-user="maxxiaobao" data-slug-hash="jObPQyz" style="height: 265px; box-sizing: border-box; display: flex; align-items: center; justify-content: center; border: 2px solid; margin: 1em 0; padding: 1em;" data-pen-title="clear-float"><br>  <span>See the Pen <a href="https://codepen.io/maxxiaobao/pen/jObPQyz" target="_blank" rel="noopener"><br>  clear-float</a> by Mary (<a href="https://codepen.io/maxxiaobao" target="_blank" rel="noopener">@maxxiaobao</a>)<br>  on <a href="https://codepen.io" target="_blank" rel="noopener">CodePen</a>.</span><br></p><p></p>
<script async src="https://static.codepen.io/assets/embed/ei.js"></script>

<blockquote>
<ol>
<li>阻止元素被浮动元素覆盖</li>
</ol>
</blockquote>
<p>把 <code>overflow: hidden</code> 注释后，便可发现左侧的红盒子底下右侧 div 的灰色背景被覆盖。</p>
<p></p><p class="codepen" data-height="265" data-theme-id="dark" data-default-tab="html,result" data-user="maxxiaobao" data-slug-hash="JjYYMME" style="height: 265px; box-sizing: border-box; display: flex; align-items: center; justify-content: center; border: 2px solid; margin: 1em 0; padding: 1em;" data-pen-title="example2"><br>  <span>See the Pen <a href="https://codepen.io/maxxiaobao/pen/JjYYMME" target="_blank" rel="noopener"><br>  example2</a> by Mary (<a href="https://codepen.io/maxxiaobao" target="_blank" rel="noopener">@maxxiaobao</a>)<br>  on <a href="https://codepen.io" target="_blank" rel="noopener">CodePen</a>.</span><br></p><p></p>
<script async src="https://static.codepen.io/assets/embed/ei.js"></script>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;什么是边距折叠&quot;&gt;&lt;a href=&quot;#什么是边距折叠&quot; class=&quot;headerlink&quot; title=&quot;什么是边距折叠&quot;&gt;&lt;/a&gt;什么是边距折叠&lt;/h3&gt;&lt;p&gt;当块级元素（block）的上外边距(margin-top)和下外边距(margin-bottom)同时都有设定时只会只会保留最大边距，这种行为称为外边距折叠（margin collapsing)。&lt;a href=&quot;https://developer.mozilla.org/zh-CN/docs/Web/CSS/CSS_Box_Model/Mastering_margin_collapsing&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;查看官方文档&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Git: 默认不区分文件名大小写</title>
    <link href="https://maxiuli.com/2020/02/26/Git%E9%BB%98%E8%AE%A4%E4%B8%8D%E5%8C%BA%E5%88%86%E6%96%87%E4%BB%B6%E5%90%8D%E5%A4%A7%E5%B0%8F%E5%86%99/"/>
    <id>https://maxiuli.com/2020/02/26/Git默认不区分文件名大小写/</id>
    <published>2020-02-26T21:08:00.000Z</published>
    <updated>2020-04-15T15:04:35.711Z</updated>
    
    <content type="html"><![CDATA[<p>（天哪，马上要 2020 年 3 月份了，太快了）</p>
<p>又遇到这个问题了，这是个什么问题呢？</p>
<h3 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h3><p>你的 repo 里有一个文件叫 <code>myname.js</code>, 后来改名 <code>MyName.js</code></p>
<p>修改后准备提交，命令行输入</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git status</span><br></pre></td></tr></table></figure>
<p>发现并没有什么改动可以提交</p>
<a id="more"></a>
<h3 id="原因"><a href="#原因" class="headerlink" title="原因"></a>原因</h3><p>Git 里默认对于文件名大小写是不敏感的<br>命令行输入，查看当前的设置</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git config core.ignorecase</span><br></pre></td></tr></table></figure>
<p><code>true</code> 则是不敏感</p>
<h3 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h3><p>打开终端，输入以下命令配置 Git 使其对文件名大小写敏感</p>
<p><code>git config core.ignorecase false</code></p>
<p>设置完成后，再修改，可以看到自己的改动</p>
<p>但如果这时直接提交就会出现另外一个问题，本地是把文件 <code>myname.js</code> 修改为 <code>MyName.js</code></p>
<p>可是提交后的远程仓库 <code>myname.js</code> 和 <code>MyName.js</code> 同时存在，<code>myname.js</code> 并没有被删除</p>
<p>（非常之坑）</p>
<p>所以意味着修改的时候要删除之前的文件, 修改名字后</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">git add MyName.js</span><br><span class="line">git rm myname.js</span><br><span class="line">git commit -m &apos;rename ...&apos;</span><br><span class="line">git push</span><br></pre></td></tr></table></figure>
<p>很麻烦是不是，是的</p>
<p>讲了半天，其实 Git 可以直接修改文件名，然后提交</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git mv oldfile(旧文件名) newfile(新文件名)</span><br></pre></td></tr></table></figure>
<blockquote>
<p>详情查看 <a href="https://git-scm.com/docs/git-mv" target="_blank" rel="noopener">https://git-scm.com/docs/git-mv</a></p>
</blockquote>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;（天哪，马上要 2020 年 3 月份了，太快了）&lt;/p&gt;
&lt;p&gt;又遇到这个问题了，这是个什么问题呢？&lt;/p&gt;
&lt;h3 id=&quot;问题&quot;&gt;&lt;a href=&quot;#问题&quot; class=&quot;headerlink&quot; title=&quot;问题&quot;&gt;&lt;/a&gt;问题&lt;/h3&gt;&lt;p&gt;你的 repo 里有一个文件叫 &lt;code&gt;myname.js&lt;/code&gt;, 后来改名 &lt;code&gt;MyName.js&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;修改后准备提交，命令行输入&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git status&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;发现并没有什么改动可以提交&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>小程序:获取用户UnionID</title>
    <link href="https://maxiuli.com/2019/10/16/%E5%B0%8F%E7%A8%8B%E5%BA%8F3/"/>
    <id>https://maxiuli.com/2019/10/16/小程序3/</id>
    <published>2019-10-16T17:27:11.000Z</published>
    <updated>2020-04-15T15:04:35.711Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p>公众平台: 服务号/订阅号/小程序<br>开放平台: 移动应用/网站应用/公众帐号开发/第三方平台开发</p>
</blockquote>
<ul>
<li>OpenID = 用户微信号 &amp; 公众平台 APPID （两个数据加密得到的字符串）</li>
<li>UnionID = 用户微信号 &amp; 开放平台 APPID（两个数据加密得到的字符串）</li>
<li>同一用户，对同一个微信开放平台帐号下的不同应用，UnionID 是相同的。</li>
</ul>
<h3 id="1-获取登录凭证（code）"><a href="#1-获取登录凭证（code）" class="headerlink" title="1.获取登录凭证（code）"></a>1.获取登录凭证（code）</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">wx.login(&#123;</span><br><span class="line">  success(res) &#123;</span><br><span class="line">    <span class="comment">// res = &#123;code&#125;</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
<p><code>res.code</code>: 用户登录凭证（有效期五分钟）。开发者需要在开发者服务器后台调用 auth.code2Session，使用 code 换取 openid 和 session_key 等信息</p>
<a id="more"></a>
<h3 id="2-授权"><a href="#2-授权" class="headerlink" title="2. 授权"></a>2. 授权</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">open-type</span>=<span class="string">"getUserInfo"</span> <span class="attr">bindgetuserinfo</span>=<span class="string">"getUserInfoHandler"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">button</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure>
<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">getUserInfoHandler(e)&#123;</span><br><span class="line">	<span class="comment">// 用户拒绝授权</span></span><br><span class="line">	<span class="comment">//e.detail.errMsg = "getUserInfo:fail auth deny"</span></span><br><span class="line">	<span class="comment">// 同意授权</span></span><br><span class="line">	&#123;</span><br><span class="line">		UserInfo: &#123;</span><br><span class="line">			nickName,</span><br><span class="line">			avatarUrl,</span><br><span class="line">			gender, <span class="comment">// [0, 1, 2]</span></span><br><span class="line">			country,</span><br><span class="line">			province,</span><br><span class="line">			city,</span><br><span class="line">			language <span class="comment">// [en, zh_CN, zh_TW]</span></span><br><span class="line">		&#125;,</span><br><span class="line">		rawData, <span class="comment">// 不包括敏感信息的原始数据字符串，用于计算签名</span></span><br><span class="line">		signature,</span><br><span class="line">		encryptedData, <span class="comment">// 包括敏感数据在内的完整用户信息的加密数据</span></span><br><span class="line">		iv, <span class="comment">//加密算法的初始向量</span></span><br><span class="line">		cloudID, <span class="comment">//敏感数据对应的云 ID，开通云开发的小程序才会返回</span></span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="3-服务端解密-unionId"><a href="#3-服务端解密-unionId" class="headerlink" title="3. 服务端解密 unionId"></a>3. 服务端解密 unionId</h3><p><code>( code, encryptedData, iv)</code><br>||<br>code =&gt; session_key<br>||<br>||<br> 服务端解密<br>||</p>
<figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"openId"</span>: <span class="string">"OPENID"</span>,</span><br><span class="line">  <span class="attr">"nickName"</span>: <span class="string">"NICKNAME"</span>,</span><br><span class="line">  <span class="attr">"gender"</span>: GENDER,</span><br><span class="line">  <span class="attr">"city"</span>: <span class="string">"CITY"</span>,</span><br><span class="line">  <span class="attr">"province"</span>: <span class="string">"PROVINCE"</span>,</span><br><span class="line">  <span class="attr">"country"</span>: <span class="string">"COUNTRY"</span>,</span><br><span class="line">  <span class="attr">"avatarUrl"</span>: <span class="string">"AVATARURL"</span>,</span><br><span class="line">  <span class="attr">"unionId"</span>: <span class="string">"UNIONID"</span>,</span><br><span class="line">  <span class="attr">"watermark"</span>: &#123;</span><br><span class="line">    <span class="attr">"appid"</span>: <span class="string">"APPID"</span>,</span><br><span class="line">    <span class="attr">"timestamp"</span>: TIMESTAMP</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;公众平台: 服务号/订阅号/小程序&lt;br&gt;开放平台: 移动应用/网站应用/公众帐号开发/第三方平台开发&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;OpenID = 用户微信号 &amp;amp; 公众平台 APPID （两个数据加密得到的字符串）&lt;/li&gt;
&lt;li&gt;UnionID = 用户微信号 &amp;amp; 开放平台 APPID（两个数据加密得到的字符串）&lt;/li&gt;
&lt;li&gt;同一用户，对同一个微信开放平台帐号下的不同应用，UnionID 是相同的。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;1-获取登录凭证（code）&quot;&gt;&lt;a href=&quot;#1-获取登录凭证（code）&quot; class=&quot;headerlink&quot; title=&quot;1.获取登录凭证（code）&quot;&gt;&lt;/a&gt;1.获取登录凭证（code）&lt;/h3&gt;&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;wx.login(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  success(res) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// res = &amp;#123;code&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;code&gt;res.code&lt;/code&gt;: 用户登录凭证（有效期五分钟）。开发者需要在开发者服务器后台调用 auth.code2Session，使用 code 换取 openid 和 session_key 等信息&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>小程序:canvas生成海报</title>
    <link href="https://maxiuli.com/2019/09/29/%E5%B0%8F%E7%A8%8B%E5%BA%8F2/"/>
    <id>https://maxiuli.com/2019/09/29/小程序2/</id>
    <published>2019-09-29T18:50:02.000Z</published>
    <updated>2020-04-15T15:04:35.711Z</updated>
    
    <content type="html"><![CDATA[<h5 id="首先："><a href="#首先：" class="headerlink" title="首先："></a>首先：</h5><ul>
<li>canvas 里的的位置单位都是 <code>px</code>;</li>
<li>创建 canvas 标签到 <code>wxml</code>,Canvas 画布一定要先设置大小;</li>
<li>canvas 文字不支持自定义字体;</li>
</ul>
<h3 id="1-获取-canvas-实例"><a href="#1-获取-canvas-实例" class="headerlink" title="1.获取 canvas 实例"></a>1.获取 canvas 实例</h3><p>用 <code>wx.createCanvasContext</code> 获取小程序实例，canvasId 是在 <code>canvas</code> 标签上定义的 canvas-id</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ctx = wx.createCanvasContext(canvasId, <span class="keyword">this</span>);</span><br></pre></td></tr></table></figure>
<a id="more"></a>
<h3 id="2-绘制图片"><a href="#2-绘制图片" class="headerlink" title="2.绘制图片"></a>2.绘制图片</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 绘制图片</span></span><br><span class="line">ctx.drawImage(imageResource, dx, dy, dWidth, dHeight);</span><br><span class="line">ctx.drawImage(imageResource, sx, sy, sWidth, sHeight, dx, dy, dWidth, dHeight);</span><br><span class="line"><span class="comment">// 从 1.9.0 起支持</span></span><br></pre></td></tr></table></figure>
<p>如果绘制的图片是网络图片，需要 <code>wx.downloadFile</code> 先下载. ( 需要吧下载图片的域名加入下载域名的白名单)</p>
<p>如何绘制圆形头像：</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> src = <span class="string">"https://wx.qlogo.cn/mmopen2"</span>;</span><br><span class="line"><span class="keyword">const</span> avatar_width = <span class="number">60</span>; <span class="comment">//绘制的头像宽度</span></span><br><span class="line"><span class="keyword">const</span> avatar_heigth = <span class="number">60</span>; <span class="comment">//绘制的头像高度</span></span><br><span class="line"><span class="keyword">const</span> avatar_x = <span class="number">0</span>; <span class="comment">//绘制的头像在画布上的位置</span></span><br><span class="line"><span class="keyword">const</span> avatar_y = <span class="number">0</span>; <span class="comment">//绘制的头像在画布上的位置</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 画圆</span></span><br><span class="line">ctx.arc(avatar_width / <span class="number">2</span>, avatar_heigth / <span class="number">2</span>, avatar_width / <span class="number">2</span>, <span class="number">0</span>, <span class="number">360</span>, <span class="literal">false</span>);</span><br><span class="line">ctx.clip();</span><br><span class="line"><span class="comment">// 从原始画布中剪切任意形状和尺寸。一旦剪切了某个区域，则所有之后的绘图都会被限制在被剪切的区域内（不能访问画布上的其他区域）。可以在使用 clip 方法前通过使用 save 方法对当前画布区域进行保存，并在以后的任意时间通过restore方法对其进行恢复。</span></span><br><span class="line">ctx.drawImage(src, <span class="number">0</span>, <span class="number">0</span>, avatar_width, avatar_heigth);</span><br></pre></td></tr></table></figure>
<h3 id="3-文字"><a href="#3-文字" class="headerlink" title="3.文字"></a>3.文字</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ctx.font = <span class="string">"40px serif"</span>;</span><br><span class="line">ctx.setTextAlign(<span class="string">"center"</span>);</span><br><span class="line">ctx.fillText(textContent, x, y, maxWidth);</span><br></pre></td></tr></table></figure>
<p>文字支持设置文字的大小，颜色，对齐方式，但不能自定义字体，所有的设置要在 <code>fillText()</code> 之前设置才起效。</p>
<p>文本块可以设置最大宽度，但超出最大宽度不会自动换行。</p>
<p>绘制多段文字：</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 最大宽度 100px，文字 font-size: 15px; line-height: 18px;</span></span><br><span class="line"><span class="comment">// 100 /15  = 6.66 最多一行6个字</span></span><br><span class="line"><span class="keyword">const</span> maxWidth = <span class="number">100</span>;</span><br><span class="line"><span class="keyword">const</span> content =</span><br><span class="line">  <span class="string">"文本块可以设置最大宽度，但超出最大宽度不会自动换行。文本块可以设置最大宽度，但超出最大宽度不会自动换行。"</span>;</span><br><span class="line"><span class="keyword">let</span> x = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">let</span> y = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">let</span> currentLine = <span class="string">""</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; content.length; i++) &#123;</span><br><span class="line">  currentLine += content[i];</span><br><span class="line">  <span class="keyword">if</span> ((i + <span class="number">1</span>) % <span class="number">6</span> === <span class="number">0</span> || i === content.length - <span class="number">1</span>) &#123;</span><br><span class="line">    ctx.fillText(currentLine, x, y, maxWidth);</span><br><span class="line">    currentLine = <span class="string">""</span>;</span><br><span class="line">    y += <span class="number">18</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="4-边框-色块"><a href="#4-边框-色块" class="headerlink" title="4. 边框/ 色块"></a>4. 边框/ 色块</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">ctx.moveTo(x, y); <span class="comment">// 移动到画布中的指定点</span></span><br><span class="line">ctx.lineTo(x, y); <span class="comment">// 直线移动到点（x,y）</span></span><br><span class="line">ctx.arcTo(startX, startY, endX, endY, radius); <span class="comment">// 弧线移动到点（x,y）</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 画边框</span></span><br><span class="line">ctx.stroke();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 填充色</span></span><br><span class="line">ctx.fill();</span><br></pre></td></tr></table></figure>
<h3 id="5-结束绘制"><a href="#5-结束绘制" class="headerlink" title="5. 结束绘制"></a>5. 结束绘制</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ctx.draw(reserve, callback);</span><br></pre></td></tr></table></figure>
<p>所有的 fillText(), drawImage() 等像是一个一个的任务，写了并不会立马执行，最后要执行 <code>draw()</code> 才会依次绘制。而且这是个异步操作，所以结束绘制后的操作要用 callback 来实现, 因此下面的保存过程要放到 callback 里。</p>
<h3 id="5-生成图片并保存"><a href="#5-生成图片并保存" class="headerlink" title="5. 生成图片并保存"></a>5. 生成图片并保存</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 生成图片</span></span><br><span class="line">wx.canvasToTempFilePath(&#123;</span><br><span class="line">  canvasId, <span class="comment">// 必传</span></span><br><span class="line">  success(res) &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(res.tempFilePath); <span class="comment">// 图片临时路径</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 保存图片到相册</span></span><br><span class="line">wx.saveImageToPhotosAlbum(&#123;</span><br><span class="line">  filePath,</span><br><span class="line">  success(res) &#123;&#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
<ul>
<li>(Tip: 保存图片到相册需要用户授权, 并且用户拒绝后，不会再次请求授权)</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h5 id=&quot;首先：&quot;&gt;&lt;a href=&quot;#首先：&quot; class=&quot;headerlink&quot; title=&quot;首先：&quot;&gt;&lt;/a&gt;首先：&lt;/h5&gt;&lt;ul&gt;
&lt;li&gt;canvas 里的的位置单位都是 &lt;code&gt;px&lt;/code&gt;;&lt;/li&gt;
&lt;li&gt;创建 canvas 标签到 &lt;code&gt;wxml&lt;/code&gt;,Canvas 画布一定要先设置大小;&lt;/li&gt;
&lt;li&gt;canvas 文字不支持自定义字体;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;1-获取-canvas-实例&quot;&gt;&lt;a href=&quot;#1-获取-canvas-实例&quot; class=&quot;headerlink&quot; title=&quot;1.获取 canvas 实例&quot;&gt;&lt;/a&gt;1.获取 canvas 实例&lt;/h3&gt;&lt;p&gt;用 &lt;code&gt;wx.createCanvasContext&lt;/code&gt; 获取小程序实例，canvasId 是在 &lt;code&gt;canvas&lt;/code&gt; 标签上定义的 canvas-id&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;ctx = wx.createCanvasContext(canvasId, &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>小程序:修改上一页面的data</title>
    <link href="https://maxiuli.com/2019/09/23/%E5%B0%8F%E7%A8%8B%E5%BA%8F1/"/>
    <id>https://maxiuli.com/2019/09/23/小程序1/</id>
    <published>2019-09-23T20:35:36.000Z</published>
    <updated>2020-04-15T15:04:35.711Z</updated>
    
    <content type="html"><![CDATA[<p>为什么要修改上一页面的 data 呢？</p>
<p>遇到一个问题：<br>有一个页面 A, A 中有表单，其中有个字段要到 B 页面去填，填好后渲染在 A 页面，因为 B 里的字段由 A 里的状态控制是否保存到 store，所以暂时不放到 全局的 store 里，其实也可以为 B 里的字段创建个临时值，但我们可以在返回 A 页面时，手动修改上一页的 data.</p>
<a id="more"></a>
<p>其实小程序的 <code>getCurrentPages()</code> 得到的数组里都是一个一个的 Page 对象，通过 Console 你就会发现可以拿到 Page 的属性以及方法，这样就可以用 setData 的方法了。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">const pages = getCurrentPages();</span><br><span class="line">const prevPage = pages[pages.length -1];</span><br><span class="line">prevPage.setData(&#123; valueB: &apos;valueB&apos;&#125;)</span><br></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;为什么要修改上一页面的 data 呢？&lt;/p&gt;
&lt;p&gt;遇到一个问题：&lt;br&gt;有一个页面 A, A 中有表单，其中有个字段要到 B 页面去填，填好后渲染在 A 页面，因为 B 里的字段由 A 里的状态控制是否保存到 store，所以暂时不放到 全局的 store 里，其实也可以为 B 里的字段创建个临时值，但我们可以在返回 A 页面时，手动修改上一页的 data.&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>CSS 小结（一）</title>
    <link href="https://maxiuli.com/2018/05/07/CSS%E5%B0%8F%E7%BB%93%EF%BC%88%E4%B8%80%EF%BC%89/"/>
    <id>https://maxiuli.com/2018/05/07/CSS小结（一）/</id>
    <published>2018-05-07T20:17:00.000Z</published>
    <updated>2020-04-15T15:04:35.711Z</updated>
    
    <content type="html"><![CDATA[<p>看了这个网站后 <a href="https://atomiks.github.io/30-seconds-of-css" target="_blank" rel="noopener">https://atomiks.github.io/30-seconds-of-css</a> 做了个总结，把常用的记下了，很好的网站！</p>
<h3 id="CSS-选择器"><a href="#CSS-选择器" class="headerlink" title="CSS 选择器"></a>CSS 选择器</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">li</span><span class="selector-pseudo">:not(</span><span class="selector-pseudo">:last-child)</span> <span class="comment">/* 除最后一个子元素外的其他元素 */</span></span><br><span class="line"><span class="selector-tag">li</span><span class="selector-pseudo">:last-child</span> <span class="comment">/* 最后一个子元素 */</span></span><br><span class="line"><span class="comment">/* 第一个子元素 (last-child =&gt; first-child) */</span></span><br></pre></td></tr></table></figure>
<h3 id="三角形-triangle"><a href="#三角形-triangle" class="headerlink" title="三角形 triangle"></a>三角形 triangle</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"triangle"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="css">  <span class="selector-class">.triangle</span>&#123;</span></span><br><span class="line"><span class="undefined">      width: 0;</span></span><br><span class="line"><span class="undefined">      height: 0;</span></span><br><span class="line"><span class="css">      <span class="selector-tag">border-top</span>: 20<span class="selector-tag">px</span> <span class="selector-tag">solid</span> <span class="selector-id">#ccc</span>;</span></span><br><span class="line"><span class="undefined">      border-left: 20px solid transparent;</span></span><br><span class="line"><span class="undefined">      border-right: 20px solid transparent;</span></span><br><span class="line"><span class="undefined">  &#125;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure>
<a id="more"></a>
<p>例子 =&gt; <div class="triangle"></div></p>
<style>
  .triangle{
      display: inline-block;
      width: 0;
      height: 0;
      border-top: 20px solid #ccc;
      border-left: 20px solid transparent;
      border-right: 20px solid transparent;
  }
</style>

<blockquote>
<p>哪个方向的三角形则 则对面那条边有颜色</p>
</blockquote>
<h3 id="文字过长显示省略号"><a href="#文字过长显示省略号" class="headerlink" title="文字过长显示省略号"></a>文字过长显示省略号</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.truncate-text</span> &#123;</span><br><span class="line">  <span class="attribute">overflow</span>: hidden;</span><br><span class="line">  <span class="attribute">white-space</span>: nowrap;</span><br><span class="line">  <span class="attribute">text-overflow</span>: ellipsis;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="利用伪元素清除浮动-Clearfix"><a href="#利用伪元素清除浮动-Clearfix" class="headerlink" title="利用伪元素清除浮动 Clearfix"></a>利用伪元素清除浮动 Clearfix</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"clearfix"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"floated"</span>&gt;</span>float a<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"floated"</span>&gt;</span>float b<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"floated"</span>&gt;</span>float c<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="css">  <span class="selector-class">.floated</span>&#123;</span></span><br><span class="line"><span class="undefined">    float: left;</span></span><br><span class="line"><span class="undefined">  &#125;</span></span><br><span class="line"><span class="css">  <span class="selector-class">.clearfix</span><span class="selector-pseudo">::after</span>&#123;</span></span><br><span class="line"><span class="undefined">    content: '',</span></span><br><span class="line"><span class="undefined">    display: block;</span></span><br><span class="line"><span class="undefined">    clear: both;</span></span><br><span class="line"><span class="undefined">  &#125;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="正方形-Constant-width-to-height-ratio"><a href="#正方形-Constant-width-to-height-ratio" class="headerlink" title="正方形 Constant width to height ratio"></a>正方形 Constant width to height ratio</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"square"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="css">  <span class="selector-class">.square</span>&#123;</span></span><br><span class="line"><span class="undefined">    width: 10%;</span></span><br><span class="line"><span class="css">    <span class="selector-tag">background</span>: <span class="selector-id">#ccc</span>;</span></span><br><span class="line"><span class="undefined">  &#125;</span></span><br><span class="line"><span class="css">  <span class="selector-class">.square</span><span class="selector-pseudo">::before</span>&#123;</span></span><br><span class="line"><span class="undefined">    content: '';</span></span><br><span class="line"><span class="undefined">    float: left;</span></span><br><span class="line"><span class="undefined">    padding-top: 100%;</span></span><br><span class="line"><span class="undefined">  &#125;</span></span><br><span class="line"><span class="css">  <span class="selector-class">.square</span><span class="selector-pseudo">::after</span>&#123;</span></span><br><span class="line"><span class="undefined">    content: '';</span></span><br><span class="line"><span class="undefined">    display: block;</span></span><br><span class="line"><span class="undefined">    clear: both;</span></span><br><span class="line"><span class="undefined">  &#125;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure>
<blockquote>
<p>对于宽度或高度大小已知的情况下是很容易画一个正方形的，这个对于宽度是比例（自适应）的时候，很实用。</p>
</blockquote>
<h3 id="文字选中样式-Custom-text-selection"><a href="#文字选中样式-Custom-text-selection" class="headerlink" title="文字选中样式 Custom text selection"></a>文字选中样式 Custom text selection</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"custom-text-selection"</span>&gt;</span>Select some of this text.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="css">  <span class="selector-class">.custom-text-selection</span><span class="selector-pseudo">::selection</span> &#123;</span></span><br><span class="line"><span class="undefined">    background: deeppink;</span></span><br><span class="line"><span class="undefined">    color: white;</span></span><br><span class="line"><span class="undefined">  &#125;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p></p><p class="custom-text-selection"> &gt;Select some of this text.</p><p></p>
<style>
  .custom-text-selection::selection {
    background: deeppink;
    color: white;
  }
</style>

<h3 id="禁止选择-Disable-selection"><a href="#禁止选择-Disable-selection" class="headerlink" title="禁止选择 Disable selection"></a>禁止选择 Disable selection</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"unselectable"</span>&gt;</span>You can select me.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="css">  <span class="selector-class">.unselectable</span>&#123;</span></span><br><span class="line"><span class="undefined">    user-select: none;</span></span><br><span class="line"><span class="undefined">  &#125;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>下面这段话无法选中👇</p>
<p></p><p class="unselectable">You can select me.</p><p></p>
<style>
  .unselectable{
    user-select: none;
  }
</style>

<blockquote>
<p>可以禁止用户选中，但不是防止用户复制文本的安全方法。</p>
</blockquote>
<h3 id="加载-Donut-spinner"><a href="#加载-Donut-spinner" class="headerlink" title="加载 Donut spinner"></a>加载 Donut spinner</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"donut"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="css">  @<span class="keyword">keyframes</span> donut-spin&#123;</span></span><br><span class="line"><span class="undefined">    0% &#123;</span></span><br><span class="line"><span class="undefined">      transform: rotate(0deg);</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="undefined">    100% &#123;</span></span><br><span class="line"><span class="undefined">      transform: retate(360deg);</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="undefined">  &#125;</span></span><br><span class="line"><span class="css">  <span class="selector-class">.donut</span>&#123;</span></span><br><span class="line"><span class="undefined">    display: inline-block;</span></span><br><span class="line"><span class="css">    <span class="selector-tag">border</span>: 4<span class="selector-tag">px</span> <span class="selector-tag">solid</span> <span class="selector-tag">rgba</span>(0, 0, 0, 0<span class="selector-class">.1</span>);</span></span><br><span class="line"><span class="css">    <span class="selector-tag">border-left-color</span>: <span class="selector-id">#7983ff</span>;</span></span><br><span class="line"><span class="undefined">    border-radius: 50%;</span></span><br><span class="line"><span class="undefined">    width: 30px;</span></span><br><span class="line"><span class="undefined">    height: 30px;</span></span><br><span class="line"><span class="css">    <span class="selector-tag">animation</span>: <span class="selector-tag">donut-spin</span> 1<span class="selector-class">.2s</span> <span class="selector-tag">linear</span> <span class="selector-tag">infinite</span>;</span></span><br><span class="line"><span class="css">    <span class="comment">/* animation: donut-spin 1.2s linear infinite; */</span></span></span><br><span class="line"><span class="css">    <span class="comment">/* donut-spin =&gt; 动画名称 1.2s =&gt; 完成一次需要的时间  */</span></span></span><br><span class="line"><span class="css">    <span class="comment">/* linear =&gt; 动画保持匀速 infinite =&gt; 无限循环 */</span></span></span><br><span class="line"><span class="undefined">  &#125;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p><div class="donut"></div></p>
<style>
  @keyframes donut-spin{
    0% {
      transform: rotate(0deg);
    }
    100% {
      transform: rotate(360deg);
    }
  }
  .donut{
    display: inline-block;
    border: 4px solid rgba(0, 0, 0, 0.1);
    border-left-color: #7983ff;
    border-radius: 50%;
    width: 30px;
    height: 30px;
    animation: donut-spin 1.2s linear infinite;
  }
</style>

<h3 id="均匀分布-Evenly-distributed-children"><a href="#均匀分布-Evenly-distributed-children" class="headerlink" title="均匀分布 Evenly distributed children"></a>均匀分布 Evenly distributed children</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"evenly-distributed-children"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>Item1<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>Item2<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>Item3<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="css">  <span class="selector-class">.evenly-distributed-children</span> &#123;</span></span><br><span class="line"><span class="undefined">    display: flex;</span></span><br><span class="line"><span class="undefined">    justify-content: space-between;</span></span><br><span class="line"><span class="undefined">  &#125;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p><div class="evenly-distributed-children"><br>  <p>Item1</p><br>  <p>Item2</p><br>  <p>Item3</p><br></div></p>
<style>
  .evenly-distributed-children {
    background: pink;
    display: flex;
    justify-content: space-between;
  }
</style>

<h3 id="水平-垂直-居中-Flexbox-centering"><a href="#水平-垂直-居中-Flexbox-centering" class="headerlink" title="水平+垂直 居中 Flexbox centering"></a>水平+垂直 居中 Flexbox centering</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"flexbox-centering"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"child"</span>&gt;</span>Centered content.<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="css">  <span class="selector-class">.flexbox-centering</span> &#123;</span></span><br><span class="line"><span class="undefined">    display: flex;</span></span><br><span class="line"><span class="undefined">    justify-content: center;</span></span><br><span class="line"><span class="undefined">    align-items: center;</span></span><br><span class="line"><span class="undefined">  &#125;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="Hover事件下划线动画-Hover-underline-animation"><a href="#Hover事件下划线动画-Hover-underline-animation" class="headerlink" title="Hover事件下划线动画 Hover underline animation"></a>Hover事件下划线动画 Hover underline animation</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"hover-underline-animation"</span>&gt;</span></span><br><span class="line">  Hover this text to see the effect!</span><br><span class="line"><span class="tag">&lt;/<span class="name">p</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="css">  <span class="selector-class">.hover-underline-animation</span> &#123;</span></span><br><span class="line"><span class="undefined">    display: inline-block;</span></span><br><span class="line"><span class="undefined">    position: relative;</span></span><br><span class="line"><span class="css">    <span class="selector-tag">color</span>: <span class="selector-id">#0087ca</span>;</span></span><br><span class="line"><span class="undefined">  &#125;</span></span><br><span class="line"><span class="css">  <span class="selector-class">.hover-underline-animation</span><span class="selector-pseudo">::after</span>&#123;</span></span><br><span class="line"><span class="undefined">    content: '';</span></span><br><span class="line"><span class="undefined">    position: absolute;</span></span><br><span class="line"><span class="undefined">    left: 0;</span></span><br><span class="line"><span class="undefined">    bottom: 0;</span></span><br><span class="line"><span class="undefined">    width: 100%;</span></span><br><span class="line"><span class="undefined">    height: 2px;</span></span><br><span class="line"><span class="undefined">    transform: scaleX(0);</span></span><br><span class="line"><span class="css">    <span class="selector-tag">background-color</span>: <span class="selector-id">#0087ca</span>;</span></span><br><span class="line"><span class="undefined">    transform-origin: bottom left;</span></span><br><span class="line"><span class="css">    <span class="selector-tag">transition</span>: <span class="selector-tag">transform</span> <span class="selector-class">.2s</span> <span class="selector-tag">ease-out</span>;</span></span><br><span class="line"><span class="undefined">  &#125;</span></span><br><span class="line"><span class="css">  <span class="selector-class">.hover-underline-animation</span><span class="selector-pseudo">:hover</span><span class="selector-pseudo">::after</span>&#123;</span></span><br><span class="line"><span class="undefined">    transform: scaleX(1);</span></span><br><span class="line"><span class="undefined">  &#125;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p></p><p class="hover-underline-animation"><br>  Hover this text to see the effect!<br></p> <p></p>
<style>
  .hover-underline-animation {
    display: inline-block;
    position: relative;
    color: #0087ca;
  }
  .hover-underline-animation::after{
    content: '';
    position: absolute;
    left: 0;
    bottom: 0;
    width: 100%;
    height: 2px;
    transform: scaleX(0);
    background-color: #0087ca;
    transform-origin: bottom left;
    transition: transform .2s ease-out;
  }
  .hover-underline-animation:hover::after{
    transform: scaleX(1);
  }
</style>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;看了这个网站后 &lt;a href=&quot;https://atomiks.github.io/30-seconds-of-css&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://atomiks.github.io/30-seconds-of-css&lt;/a&gt; 做了个总结，把常用的记下了，很好的网站！&lt;/p&gt;
&lt;h3 id=&quot;CSS-选择器&quot;&gt;&lt;a href=&quot;#CSS-选择器&quot; class=&quot;headerlink&quot; title=&quot;CSS 选择器&quot;&gt;&lt;/a&gt;CSS 选择器&lt;/h3&gt;&lt;figure class=&quot;highlight css&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-tag&quot;&gt;li&lt;/span&gt;&lt;span class=&quot;selector-pseudo&quot;&gt;:not(&lt;/span&gt;&lt;span class=&quot;selector-pseudo&quot;&gt;:last-child)&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;/* 除最后一个子元素外的其他元素 */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-tag&quot;&gt;li&lt;/span&gt;&lt;span class=&quot;selector-pseudo&quot;&gt;:last-child&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;/* 最后一个子元素 */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/* 第一个子元素 (last-child =&amp;gt; first-child) */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;三角形-triangle&quot;&gt;&lt;a href=&quot;#三角形-triangle&quot; class=&quot;headerlink&quot; title=&quot;三角形 triangle&quot;&gt;&lt;/a&gt;三角形 triangle&lt;/h3&gt;&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;triangle&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;style&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;undefined&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;css&quot;&gt;  &lt;span class=&quot;selector-class&quot;&gt;.triangle&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;undefined&quot;&gt;      width: 0;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;undefined&quot;&gt;      height: 0;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;css&quot;&gt;      &lt;span class=&quot;selector-tag&quot;&gt;border-top&lt;/span&gt;: 20&lt;span class=&quot;selector-tag&quot;&gt;px&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;solid&lt;/span&gt; &lt;span class=&quot;selector-id&quot;&gt;#ccc&lt;/span&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;undefined&quot;&gt;      border-left: 20px solid transparent;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;undefined&quot;&gt;      border-right: 20px solid transparent;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;undefined&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;undefined&quot;&gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;style&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="CSS" scheme="https://maxiuli.com/tags/CSS/"/>
    
  </entry>
  
  <entry>
    <title>2017年终总结</title>
    <link href="https://maxiuli.com/2018/02/27/2017%E5%B9%B4%E7%BB%88%E6%80%BB%E7%BB%93/"/>
    <id>https://maxiuli.com/2018/02/27/2017年终总结/</id>
    <published>2018-02-27T08:17:00.000Z</published>
    <updated>2020-04-15T15:04:35.711Z</updated>
    
    <content type="html"><![CDATA[<p>2017又是忙碌的一年<br>（本想过年时写，结果一堆小娃娃围着你，真的是没法写）</p>
<a id="more"></a>
<blockquote>
<p>在工作学习上</p>
</blockquote>
<p>5月份 进入wiredcraft 新实习，并留下来正式工作<br>6月份 回学校毕业答辩，我毕业了！<br>7月份 回到上海，开始真正的工作旅程<br>进入工作后，还用jQuery写了一个静态项目，因为经验不足，对Jekyll不是很了解，写的并不是很成功。<br>然后开始学习react，写了一个活动报名页面，还没有真正的理解react，当时看着代码觉得写的很冗余。<br>后来进入下一个项目用webpack/react/redux，项目框架是由大佬搭好的架子，然后我把页面写好填充进去，开始对react ，redux有了深入的理解<br>项目中大部分都是ES6，开始时有了解过ES6，年底时又看了下阮一峰老师的《ES6的标准入门》，有了全面的了解。</p>
<blockquote>
<p>在生活上</p>
</blockquote>
<p>3月份王叔叔<br>今年去了杭州，南京，跟公司还去了深圳，毕业回了青岛一趟，也算是充实的一年<br>期间在伴鱼学习英语一段落</p>
<blockquote>
<p>2018年</p>
</blockquote>
<p>希望自己能真正理解一个项目前端的架构，工具/框架 存在的真实意义，如果博客满足不了，就看书看书，今年要锻炼身体，要早起学习，每周一部电影，生活还要继续！</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;2017又是忙碌的一年&lt;br&gt;（本想过年时写，结果一堆小娃娃围着你，真的是没法写）&lt;/p&gt;
    
    </summary>
    
    
      <category term="生活" scheme="https://maxiuli.com/tags/%E7%94%9F%E6%B4%BB/"/>
    
  </entry>
  
  <entry>
    <title>如何创建一个NPM包</title>
    <link href="https://maxiuli.com/2017/12/08/%E5%A6%82%E4%BD%95%E5%88%9B%E5%BB%BA%E4%B8%80%E4%B8%AAnpm%E5%8C%85/"/>
    <id>https://maxiuli.com/2017/12/08/如何创建一个npm包/</id>
    <published>2017-12-08T18:04:00.000Z</published>
    <updated>2020-04-15T15:04:35.711Z</updated>
    
    <content type="html"><![CDATA[<p>经常使用 <code>npm install</code> 命令安装各种包，这次自己尝试自己写了一个发布在npm上(其实这是第二个了)</p>
<h3 id="什么是npm"><a href="#什么是npm" class="headerlink" title="什么是npm"></a>什么是npm</h3><blockquote>
<p><a href="https://www.npmjs.com/" target="_blank" rel="noopener">npm</a> 是Node 的模块管理器，功能极其强大。 它是Node 获得成功的重要原因之一。 正因为有了npm，我们只要一行命令，就能安装别人写好的模块。</p>
</blockquote>
<p>NPM <a href="https://www.npmjs.com/" target="_blank" rel="noopener">官方网站</a><br>先来 <a href="https://www.npmjs.com/signup" target="_blank" rel="noopener">注册一个账号</a></p>
<a id="more"></a>
<h3 id="写一个包"><a href="#写一个包" class="headerlink" title="写一个包"></a>写一个包</h3><ul>
<li>创建一个文件夹 <code>test</code></li>
<li>创建一个 <code>index.js</code></li>
</ul>
<pre><code class="js"><span class="comment">// index.js</span>
<span class="function"><span class="keyword">function</span> <span class="title">test</span>(<span class="params"></span>) </span>{
  <span class="built_in">console</span>.log(<span class="string">"Hello world !"</span>);
}
<span class="built_in">module</span>.exports = test;
</code></pre>
<ul>
<li>命令行 执行 <code>npm init</code> 创建 <code>package.json</code> （所创建的 <code>test</code> 的基本信息）</li>
</ul>
<blockquote>
<p>  “name”: “test”,<br>  “version”: “1.0.0”,</p>
</blockquote>
<h3 id="上传到npm官网"><a href="#上传到npm官网" class="headerlink" title="上传到npm官网"></a>上传到npm官网</h3><ul>
<li><p><code>npm adduser</code> 输入username 和 password</p>
<p>使用 <b>test</b> 发布 会有error</p>
<blockquote>
<p>npm ERR publish 403.<br>You do not have permission to publish ‘test’.Are you logged in as the corrent user?:test</p>
</blockquote>
<p>意思是我没权限发布test，并问我是否使用了正确的账号<br>说明test被人 发布过了，可以在<code>package.json</code>中 <code>name</code> 换一个，比如<code>test-mary</code></p>
</li>
<li><p><code>npm publish</code> 上传到npm官网</p>
</li>
<li>如果对npm包做了修改后，需要在 <code>package.json</code> 的 <code>version</code> ，然后执行 <code>npm publish</code></li>
<li><code>npm unpublish --force</code> 在npm上删除包</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;经常使用 &lt;code&gt;npm install&lt;/code&gt; 命令安装各种包，这次自己尝试自己写了一个发布在npm上(其实这是第二个了)&lt;/p&gt;
&lt;h3 id=&quot;什么是npm&quot;&gt;&lt;a href=&quot;#什么是npm&quot; class=&quot;headerlink&quot; title=&quot;什么是npm&quot;&gt;&lt;/a&gt;什么是npm&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https://www.npmjs.com/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;npm&lt;/a&gt; 是Node 的模块管理器，功能极其强大。 它是Node 获得成功的重要原因之一。 正因为有了npm，我们只要一行命令，就能安装别人写好的模块。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;NPM &lt;a href=&quot;https://www.npmjs.com/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;官方网站&lt;/a&gt;&lt;br&gt;先来 &lt;a href=&quot;https://www.npmjs.com/signup&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;注册一个账号&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>神奇的 inline-block</title>
    <link href="https://maxiuli.com/2017/08/13/%E7%A5%9E%E5%A5%87%E7%9A%84inline-block/"/>
    <id>https://maxiuli.com/2017/08/13/神奇的inline-block/</id>
    <published>2017-08-13T14:01:00.000Z</published>
    <updated>2020-04-15T15:04:35.711Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">突然发现inline-block真是个神奇的属性呢~</span><br></pre></td></tr></table></figure>
<h5 id="当写下下面的代码的时候"><a href="#当写下下面的代码的时候" class="headerlink" title="当写下下面的代码的时候"></a>当写下下面的代码的时候</h5><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="css">    <span class="selector-class">.div1</span>&#123;</span></span><br><span class="line"><span class="undefined">        width: 200px;</span></span><br><span class="line"><span class="undefined">        height: 200px;</span></span><br><span class="line"><span class="undefined">        display: inline-block;</span></span><br><span class="line"><span class="css">        <span class="selector-tag">background-color</span>: <span class="selector-id">#F98E90</span>;</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="css">    <span class="selector-class">.div2</span>&#123;</span></span><br><span class="line"><span class="undefined">        width: 200px;</span></span><br><span class="line"><span class="undefined">        height: 200px;</span></span><br><span class="line"><span class="undefined">        display: inline-block;</span></span><br><span class="line"><span class="css">        <span class="selector-tag">background-color</span>: <span class="selector-id">#B9D7EA</span>;</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"div1"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"div2"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>
<a id="more"></a>
<h5 id="你会看到下面的两个彩色块（自古红蓝出CP）"><a href="#你会看到下面的两个彩色块（自古红蓝出CP）" class="headerlink" title="你会看到下面的两个彩色块（自古红蓝出CP）"></a>你会看到下面的两个彩色块（自古红蓝出CP）</h5><div style="width: 200px;
            height:200px;
            display:inline-block;
            background-color:#F98E90;"></div><div style="width: 200px;
            height: 200px;
            display: inline-block;
            background-color: #B9D7EA;"></div>

<h5 id="当我给红色块加点文字时"><a href="#当我给红色块加点文字时" class="headerlink" title="当我给红色块加点文字时"></a>当我给红色块加点文字时</h5><div style="width: 200px;
            height:200px;
            color:#fff;
            display:inline-block;
            background-color:#F98E90;">我是一个有文字的红色块</div><div style="width: 200px;
            height: 200px;
            display: inline-block;
            background-color: #B9D7EA;"></div>

<h5 id="两个div块都添加文字"><a href="#两个div块都添加文字" class="headerlink" title="两个div块都添加文字"></a>两个div块都添加文字</h5><div style="width: 200px;
            height:200px;
            color:#fff;
            display:inline-block;
            background-color:#F98E90;">我是一个有文字的红色块</div><div style="width: 200px;
            height: 200px;
            display: inline-block;
            background-color: #B9D7EA;">我也有文字！！！</div>

<h5 id="咦"><a href="#咦" class="headerlink" title="咦~~~"></a>咦~~~</h5><p>发现只有红色div有文字时它会下沉，其实它们对于文字有一个基线，默认是在父元素的基线（baseline）,可以通过修改<code>vertical-align</code>来修改基线位置,下面是<code>vertical-align:top</code></p>
<div style="width: 200px;
            height:200px;
            color:#fff;
            display:inline-block;
            vertical-align:top;
            background-color:#F98E90;">我是一个有文字的红色块</div><div style="width: 200px;
            height: 200px;
            display: inline-block;
            background-color: #B9D7EA;"></div>

<blockquote>
<p>其实还是没有真正的明白基线是什么东西。</p>
</blockquote>
]]></content>
    
    <summary type="html">
    
      &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;突然发现inline-block真是个神奇的属性呢~&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h5 id=&quot;当写下下面的代码的时候&quot;&gt;&lt;a href=&quot;#当写下下面的代码的时候&quot; class=&quot;headerlink&quot; title=&quot;当写下下面的代码的时候&quot;&gt;&lt;/a&gt;当写下下面的代码的时候&lt;/h5&gt;&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;style&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;undefined&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;css&quot;&gt;    &lt;span class=&quot;selector-class&quot;&gt;.div1&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;undefined&quot;&gt;        width: 200px;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;undefined&quot;&gt;        height: 200px;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;undefined&quot;&gt;        display: inline-block;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;css&quot;&gt;        &lt;span class=&quot;selector-tag&quot;&gt;background-color&lt;/span&gt;: &lt;span class=&quot;selector-id&quot;&gt;#F98E90&lt;/span&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;undefined&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;css&quot;&gt;    &lt;span class=&quot;selector-class&quot;&gt;.div2&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;undefined&quot;&gt;        width: 200px;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;undefined&quot;&gt;        height: 200px;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;undefined&quot;&gt;        display: inline-block;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;css&quot;&gt;        &lt;span class=&quot;selector-tag&quot;&gt;background-color&lt;/span&gt;: &lt;span class=&quot;selector-id&quot;&gt;#B9D7EA&lt;/span&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;undefined&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;undefined&quot;&gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;style&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;div1&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;div2&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="javascript" scheme="https://maxiuli.com/tags/javascript/"/>
    
  </entry>
  
  <entry>
    <title>如何实现水平居中 &amp; 垂直居中</title>
    <link href="https://maxiuli.com/2017/08/13/%E6%B0%B4%E5%B9%B3%E5%B1%85%E4%B8%AD&amp;%E5%9E%82%E7%9B%B4%E5%B1%85%E4%B8%AD/"/>
    <id>https://maxiuli.com/2017/08/13/水平居中&amp;垂直居中/</id>
    <published>2017-08-13T13:34:20.000Z</published>
    <updated>2020-04-15T15:04:35.711Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p>感觉现在的自己已经超级懒了~~~已经打好草稿了好几篇博客就是懒得总结发布。。。最近经常遇到水平居中和垂直居中的问题，所以就总结了下。</p>
</blockquote>
<h3 id="水平居中"><a href="#水平居中" class="headerlink" title="水平居中"></a>水平居中</h3><h5 id="1-text-align-center"><a href="#1-text-align-center" class="headerlink" title="1. text-align: center ;"></a>1. text-align: center ;</h5><pre><code>可使用场景 块级元素包含行内元素
 h,p等块级标签，让标签内文本居中
 div块级元素让内部的行内元素居中
</code></pre><h5 id="2-margin-0-auto"><a href="#2-margin-0-auto" class="headerlink" title="2. margin: 0 auto;"></a>2. margin: 0 auto;</h5><pre><code>块级元素内的块级元素居中
</code></pre><h5 id="3-position-定位"><a href="#3-position-定位" class="headerlink" title="3. position 定位"></a>3. position 定位</h5><pre><code>position: fixed / absoluted; 
 left: 50%; 
 margin-left: -width/2;
 //块级元素内包含块级元素（宽度已知)
</code></pre><h5 id="4-transform-属性"><a href="#4-transform-属性" class="headerlink" title="4. transform 属性"></a>4. transform 属性</h5><pre><code>margin-left: 50%;//(父元素的百分之50)
 transform: translate(-50%,0); //(自身宽度的50%);
 //块级元素包含块级元素
</code></pre><a id="more"></a>
<h5 id="5-flex-布局"><a href="#5-flex-布局" class="headerlink" title="5. flex 布局"></a>5. flex 布局</h5><pre><code>display: flex;
 justify-content: center; 
</code></pre><h3 id="垂直居中"><a href="#垂直居中" class="headerlink" title="垂直居中"></a>垂直居中</h3><h5 id="1-line-height-属性"><a href="#1-line-height-属性" class="headerlink" title="1. line-height 属性"></a>1. line-height 属性</h5><pre><code>height: 20px; 
 line-height: 20px;
 // height = line-height
 // 块级元素内为行内元素
</code></pre><h5 id="2-display-table"><a href="#2-display-table" class="headerlink" title="2. display: table;"></a>2. display: table;</h5><pre><code>display: table; //父元素 
 display: table-cell; // 子元素 
 vertical-align: center;
</code></pre><h5 id="3-position-定位-1"><a href="#3-position-定位-1" class="headerlink" title="3. position:定位"></a>3. position:定位</h5><pre><code>position: relative; //父元素
 position: absolute; // 子元素 
 top: 50%; 
 left: 50%; 
 width: 10px; 
 height: 20px;
</code></pre><h5 id="4-flex-布局"><a href="#4-flex-布局" class="headerlink" title="4. flex 布局"></a>4. flex 布局</h5><pre><code>display: flex;// 父元素 
 align-items: center;
</code></pre><h5 id="5-transform-属性"><a href="#5-transform-属性" class="headerlink" title="5. transform 属性"></a>5. transform 属性</h5><pre><code>margin-top: 50%;//(父元素的百分之50)
 transform: translate(0,-50%); //(自身高度的50%);
</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;感觉现在的自己已经超级懒了~~~已经打好草稿了好几篇博客就是懒得总结发布。。。最近经常遇到水平居中和垂直居中的问题，所以就总结了下。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;水平居中&quot;&gt;&lt;a href=&quot;#水平居中&quot; class=&quot;headerlink&quot; title=&quot;水平居中&quot;&gt;&lt;/a&gt;水平居中&lt;/h3&gt;&lt;h5 id=&quot;1-text-align-center&quot;&gt;&lt;a href=&quot;#1-text-align-center&quot; class=&quot;headerlink&quot; title=&quot;1. text-align: center ;&quot;&gt;&lt;/a&gt;1. text-align: center ;&lt;/h5&gt;&lt;pre&gt;&lt;code&gt;可使用场景 块级元素包含行内元素
 h,p等块级标签，让标签内文本居中
 div块级元素让内部的行内元素居中
&lt;/code&gt;&lt;/pre&gt;&lt;h5 id=&quot;2-margin-0-auto&quot;&gt;&lt;a href=&quot;#2-margin-0-auto&quot; class=&quot;headerlink&quot; title=&quot;2. margin: 0 auto;&quot;&gt;&lt;/a&gt;2. margin: 0 auto;&lt;/h5&gt;&lt;pre&gt;&lt;code&gt;块级元素内的块级元素居中
&lt;/code&gt;&lt;/pre&gt;&lt;h5 id=&quot;3-position-定位&quot;&gt;&lt;a href=&quot;#3-position-定位&quot; class=&quot;headerlink&quot; title=&quot;3. position 定位&quot;&gt;&lt;/a&gt;3. position 定位&lt;/h5&gt;&lt;pre&gt;&lt;code&gt;position: fixed / absoluted; 
 left: 50%; 
 margin-left: -width/2;
 //块级元素内包含块级元素（宽度已知)
&lt;/code&gt;&lt;/pre&gt;&lt;h5 id=&quot;4-transform-属性&quot;&gt;&lt;a href=&quot;#4-transform-属性&quot; class=&quot;headerlink&quot; title=&quot;4. transform 属性&quot;&gt;&lt;/a&gt;4. transform 属性&lt;/h5&gt;&lt;pre&gt;&lt;code&gt;margin-left: 50%;//(父元素的百分之50)
 transform: translate(-50%,0); //(自身宽度的50%);
 //块级元素包含块级元素
&lt;/code&gt;&lt;/pre&gt;
    
    </summary>
    
    
      <category term="javascript" scheme="https://maxiuli.com/tags/javascript/"/>
    
  </entry>
  
  <entry>
    <title>来一个好看的console.log</title>
    <link href="https://maxiuli.com/2017/05/10/%E6%9D%A5%E4%B8%80%E4%B8%AA%E5%A5%BD%E7%9C%8B%E7%9A%84console.log/"/>
    <id>https://maxiuli.com/2017/05/10/来一个好看的console.log/</id>
    <published>2017-05-10T20:03:00.000Z</published>
    <updated>2020-04-15T15:04:35.711Z</updated>
    
    <content type="html"><![CDATA[<p>每天都在 console.log(),在 debug 的时候确实很好用，无意间在爱奇艺 F12 了一下，发现原来 console 还可以有样式的~? 刚给域名续了两年（比收到刚买的包包还开心），接下来看看好看的 log 吧~</p>
<p>—————————————————-先来一条分割线—————————————————————–</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">console.log(data);</span><br></pre></td></tr></table></figure>
<p>一般的我们是这样写的,data 一般是个变量或者是个其他什么值，写法简单，打印出来也很简单，他是这样子的</p>
<p><img src="https://7xslws.com1.z0.glb.clouddn.com/img1.png" alt></p>
<p>那么加样式应该怎么写呢？</p>
<a id="more"></a>
<p>举个栗子</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">console.log(&quot;%c我有样式了&quot;, &quot;color: red&quot;);</span><br></pre></td></tr></table></figure>
<p>看图就可能更明了了</p>
<p><img src="https://7xslws.com1.z0.glb.clouddn.com/img2.png" alt></p>
<p>所以说要识别文字要在前边加一个%c，这样才知道前边是文字，后边是样式</p>
<p>接下来</p>
<p>你可能会问</p>
<p>我每个字的样式不一样的那怎么办呢</p>
<p>哈哈哈哈哈哈</p>
<p>我就知道你会这么问</p>
<p>看代码</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">console.log(&quot;%c我有样式了 %c我有样式吗？&quot;,&quot;color: red&quot;);</span><br><span class="line">console.log(&quot;%c我有样式了 %c我有样式吗？&quot;,&quot;color: red&quot;,&quot;color: green&quot;);</span><br><span class="line">console.log(&quot;%c我有样式了 %c我有样式吗？%c必须的有样式啊&quot;,&quot;color: red&quot;,&quot;color: green&quot;,&quot;color: yellow&quot;);</span><br></pre></td></tr></table></figure>
<p>看图</p>
<p><img src="https://7xslws.com1.z0.glb.clouddn.com/img3.png" alt></p>
<p>所以说有几个样式就对应几个%c，没有样式了，%c 也就被认为是普通字符了</p>
<p>还有这个</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">console.log(&apos;%c彩色文字啊 &apos;, &apos;background-image:-webkit-gradient( linear, left top, right top, color-stop(0, #f22), color-stop(0.15, #f2f), color-stop(0.3, #22f), color-stop(0.45, #2ff), color-stop(0.6, #2f2),color-stop(0.75, #2f2), color-stop(0.9, #ff2), color-stop(1, #f22) );color:transparent;-webkit-background-clip: text;font-size:5em;&apos;);</span><br></pre></td></tr></table></figure>
<p>比较有趣的 console <a href="https://www.zhihu.com/question/28831274" title target="_blank" rel="noopener">https://www.zhihu.com/question/28831274</a>(他们是怎么找到的？恩？)</p>
<p>可以看下 console 的 API<a href="https://getfirebug.com/wiki/index.php/Console.log" target="_blank" rel="noopener">https://getfirebug.com/wiki/index.php/Console.log</a><br>还有这个<a href="https://www.css88.com/archives/3678" title target="_blank" rel="noopener">https://www.css88.com/archives/3678</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;每天都在 console.log(),在 debug 的时候确实很好用，无意间在爱奇艺 F12 了一下，发现原来 console 还可以有样式的~? 刚给域名续了两年（比收到刚买的包包还开心），接下来看看好看的 log 吧~&lt;/p&gt;
&lt;p&gt;—————————————————-先来一条分割线—————————————————————–&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;console.log(data);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;一般的我们是这样写的,data 一般是个变量或者是个其他什么值，写法简单，打印出来也很简单，他是这样子的&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://7xslws.com1.z0.glb.clouddn.com/img1.png&quot; alt&gt;&lt;/p&gt;
&lt;p&gt;那么加样式应该怎么写呢？&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>js控制audio音频的播放与暂停</title>
    <link href="https://maxiuli.com/2017/05/04/js%E6%8E%A7%E5%88%B6audio%E9%9F%B3%E9%A2%91%E7%9A%84%E6%92%AD%E6%94%BE%E4%B8%8E%E6%9A%82%E5%81%9C/"/>
    <id>https://maxiuli.com/2017/05/04/js控制audio音频的播放与暂停/</id>
    <published>2017-05-04T20:03:00.000Z</published>
    <updated>2020-04-15T15:04:35.711Z</updated>
    
    <content type="html"><![CDATA[<p>上周的时候，需要做一个音频列表，后边有播放和暂停控制，真正的 audio 标签其实是不显示的，所以就要用 js 控制 audio 标签。</p>
<p>首先你要知道什么是 audio 标签<a href="https://www.w3school.com.cn/html5/html5_audio.asp" title target="_blank" rel="noopener">关于 audio</a>，先上代码</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="css">      <span class="selector-class">.playSpan</span> &#123;</span></span><br><span class="line"><span class="css">        <span class="selector-tag">color</span>: <span class="selector-id">#9de3fe</span>;</span></span><br><span class="line"><span class="undefined">      &#125;</span></span><br><span class="line"><span class="css">      <span class="selector-class">.stopSpan</span> &#123;</span></span><br><span class="line"><span class="css">        <span class="selector-tag">color</span>: <span class="selector-id">#ff3366</span>;</span></span><br><span class="line"><span class="undefined">      &#125;</span></span><br><span class="line"><span class="undefined">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 建一个audio标签 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">audio</span></span></span><br><span class="line"><span class="tag">      <span class="attr">id</span>=<span class="string">"audio"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">controls</span>=<span class="string">"controls"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">src</span>=<span class="string">"https://www.w3school.com.cn/i/horse.ogg"</span></span></span><br><span class="line"><span class="tag">    &gt;</span><span class="tag">&lt;/<span class="name">audio</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- span标签控制音频 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"playSpan"</span> <span class="attr">onclick</span>=<span class="string">"play()"</span>&gt;</span>播放<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript">      <span class="function"><span class="keyword">function</span> <span class="title">play</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> audio = <span class="built_in">document</span>.getElementById(<span class="string">"audio"</span>);</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> span = <span class="built_in">document</span>.getElementsByTagName(<span class="string">"span"</span>)[<span class="number">0</span>];</span></span><br><span class="line"><span class="javascript">        <span class="keyword">if</span> (span.className == <span class="string">"playSpan"</span>) &#123;</span></span><br><span class="line"><span class="undefined">          audio.play();</span></span><br><span class="line"><span class="javascript">          span.innerText = <span class="string">"暂停"</span>;</span></span><br><span class="line"><span class="javascript">          span.className = <span class="string">"stopSpan"</span>;</span></span><br><span class="line"><span class="javascript">          <span class="comment">/*  监听音频播放完成  */</span></span></span><br><span class="line"><span class="undefined">          audio.addEventListener(</span></span><br><span class="line"><span class="javascript">            <span class="string">"ended"</span>,</span></span><br><span class="line"><span class="javascript">            <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">              span.innerText = <span class="string">"播放"</span>;</span></span><br><span class="line"><span class="javascript">              span.className = <span class="string">"playSpan"</span>;</span></span><br><span class="line"><span class="undefined">            &#125;,</span></span><br><span class="line"><span class="javascript">            <span class="literal">false</span></span></span><br><span class="line"><span class="undefined">          );</span></span><br><span class="line"><span class="javascript">        &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="undefined">          audio.pause();</span></span><br><span class="line"><span class="javascript">          span.innerText = <span class="string">"播放"</span>;</span></span><br><span class="line"><span class="javascript">          span.className = <span class="string">"playSpan"</span>;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined">      &#125;</span></span><br><span class="line"><span class="undefined">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<a id="more"></a>
<blockquote>
<p>其实重点就是那几个方法</p>
<blockquote>
<p>audio.play() 音频播放<br>audio.pause() 音频暂停<br>audio 的 ended 视频停止<br>audio.currentTime 音频播放时间</p>
</blockquote>
</blockquote>
<h4 id="这个地方有个重点就是上边的方法都标签的原生方法，所以当你使用-jQuery-拿到标签时，要把-jQuery-对象转成-DOM-元素，这样才能调用原生方法"><a href="#这个地方有个重点就是上边的方法都标签的原生方法，所以当你使用-jQuery-拿到标签时，要把-jQuery-对象转成-DOM-元素，这样才能调用原生方法" class="headerlink" title="这个地方有个重点就是上边的方法都标签的原生方法，所以当你使用 jQuery 拿到标签时，要把 jQuery 对象转成 DOM 元素，这样才能调用原生方法~"></a>这个地方有个重点就是上边的方法都标签的原生方法，所以当你使用 jQuery 拿到标签时，要把 jQuery 对象转成 DOM 元素，这样才能调用原生方法~</h4><p>没做的时候觉得很难，做了发现 audio 也只是和普通的标签，按常理做就好了，恩~。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;上周的时候，需要做一个音频列表，后边有播放和暂停控制，真正的 audio 标签其实是不显示的，所以就要用 js 控制 audio 标签。&lt;/p&gt;
&lt;p&gt;首先你要知道什么是 audio 标签&lt;a href=&quot;https://www.w3school.com.cn/html5/html5_audio.asp&quot; title target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;关于 audio&lt;/a&gt;，先上代码&lt;/p&gt;
&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;html&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;lang&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;en&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;head&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;meta&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;charset&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;UTF-8&quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;title&lt;/span&gt;&amp;gt;&lt;/span&gt;Document&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;title&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;style&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;undefined&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;css&quot;&gt;      &lt;span class=&quot;selector-class&quot;&gt;.playSpan&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;css&quot;&gt;        &lt;span class=&quot;selector-tag&quot;&gt;color&lt;/span&gt;: &lt;span class=&quot;selector-id&quot;&gt;#9de3fe&lt;/span&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;undefined&quot;&gt;      &amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;css&quot;&gt;      &lt;span class=&quot;selector-class&quot;&gt;.stopSpan&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;css&quot;&gt;        &lt;span class=&quot;selector-tag&quot;&gt;color&lt;/span&gt;: &lt;span class=&quot;selector-id&quot;&gt;#ff3366&lt;/span&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;undefined&quot;&gt;      &amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;undefined&quot;&gt;    &lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;style&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;head&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;&amp;lt;!-- 建一个audio标签 --&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;audio&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;      &lt;span class=&quot;attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;audio&quot;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;      &lt;span class=&quot;attr&quot;&gt;controls&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;controls&quot;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;      &lt;span class=&quot;attr&quot;&gt;src&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;https://www.w3school.com.cn/i/horse.ogg&quot;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;    &amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;audio&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;&amp;lt;!-- span标签控制音频 --&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;span&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;playSpan&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;onclick&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;play()&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;播放&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;span&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;undefined&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;javascript&quot;&gt;      &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;play&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;javascript&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; audio = &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.getElementById(&lt;span class=&quot;string&quot;&gt;&quot;audio&quot;&lt;/span&gt;);&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;javascript&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; span = &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.getElementsByTagName(&lt;span class=&quot;string&quot;&gt;&quot;span&quot;&lt;/span&gt;)[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;];&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;javascript&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (span.className == &lt;span class=&quot;string&quot;&gt;&quot;playSpan&quot;&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;undefined&quot;&gt;          audio.play();&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;javascript&quot;&gt;          span.innerText = &lt;span class=&quot;string&quot;&gt;&quot;暂停&quot;&lt;/span&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;javascript&quot;&gt;          span.className = &lt;span class=&quot;string&quot;&gt;&quot;stopSpan&quot;&lt;/span&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;javascript&quot;&gt;          &lt;span class=&quot;comment&quot;&gt;/*  监听音频播放完成  */&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;undefined&quot;&gt;          audio.addEventListener(&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;javascript&quot;&gt;            &lt;span class=&quot;string&quot;&gt;&quot;ended&quot;&lt;/span&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;javascript&quot;&gt;            &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;javascript&quot;&gt;              span.innerText = &lt;span class=&quot;string&quot;&gt;&quot;播放&quot;&lt;/span&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;javascript&quot;&gt;              span.className = &lt;span class=&quot;string&quot;&gt;&quot;playSpan&quot;&lt;/span&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;undefined&quot;&gt;            &amp;#125;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;javascript&quot;&gt;            &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;undefined&quot;&gt;          );&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;javascript&quot;&gt;        &amp;#125; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;undefined&quot;&gt;          audio.pause();&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;javascript&quot;&gt;          span.innerText = &lt;span class=&quot;string&quot;&gt;&quot;播放&quot;&lt;/span&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;javascript&quot;&gt;          span.className = &lt;span class=&quot;string&quot;&gt;&quot;playSpan&quot;&lt;/span&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;undefined&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;undefined&quot;&gt;      &amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;undefined&quot;&gt;    &lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;html&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="javascript" scheme="https://maxiuli.com/tags/javascript/"/>
    
  </entry>
  
  <entry>
    <title>git命令操作</title>
    <link href="https://maxiuli.com/2017/05/01/git%E6%93%8D%E4%BD%9C%E5%91%BD%E4%BB%A4/"/>
    <id>https://maxiuli.com/2017/05/01/git操作命令/</id>
    <published>2017-05-01T18:04:00.000Z</published>
    <updated>2020-04-15T15:04:35.711Z</updated>
    
    <content type="html"><![CDATA[<p>平时用的 git 命令就那么几个，都很简单，这几天系统的看了廖雪峰老师的教程，简直写的不能更好，这个记录比较简洁，推荐大家点击<a href="https://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000" target="_blank" rel="noopener">廖雪峰老师的 git 教程</a></p>
<blockquote>
<p>git 命令</p>
<blockquote>
<p>git init 初始化一个仓库</p>
<p>git add readme.text 仓库中条件一个文件</p>
<p>git commit -m “balabala” 仓库代码合并</p>
<p>git status 仓库的状态</p>
<p>git diff 仓库的变化</p>
<p>git log 打印日志</p>
<p>git reflog 查看原来的命令</p>
</blockquote>
</blockquote>
<a id="more"></a>
<blockquote>
<blockquote>
<p>stage 暂存区</p>
<p>git checkout – (filename) 工作区的修改撤销</p>
<p>git reset HEAD (filename) 暂存区修改撤销 （再进行工作区撤销）</p>
<p>git reset –hard HEAD^ (num)回退到上一版本</p>
<p>git rm （filename）删除文件</p>
<p>git push 把本地仓库修改推送到远程仓库修改</p>
<p>git clone （url）将远程仓库的内容克隆到本地</p>
<p>git branch （devname）创建分支</p>
<p>git branch 查看所有分支</p>
<p>git checkout （devname）切换分支</p>
<p>git merge （devname）将 dev 分支上的东西合并到当前所在分支</p>
<p>git branch -d （devname）删除分支</p>
</blockquote>
</blockquote>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;平时用的 git 命令就那么几个，都很简单，这几天系统的看了廖雪峰老师的教程，简直写的不能更好，这个记录比较简洁，推荐大家点击&lt;a href=&quot;https://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;廖雪峰老师的 git 教程&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;git 命令&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;git init 初始化一个仓库&lt;/p&gt;
&lt;p&gt;git add readme.text 仓库中条件一个文件&lt;/p&gt;
&lt;p&gt;git commit -m “balabala” 仓库代码合并&lt;/p&gt;
&lt;p&gt;git status 仓库的状态&lt;/p&gt;
&lt;p&gt;git diff 仓库的变化&lt;/p&gt;
&lt;p&gt;git log 打印日志&lt;/p&gt;
&lt;p&gt;git reflog 查看原来的命令&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>JS中的等号、双等号和三等号区别</title>
    <link href="https://maxiuli.com/2017/04/22/%E7%AD%89%E5%8F%B7%E3%80%81%E5%8F%8C%E7%AD%89%E5%8F%B7%E5%92%8C%E4%B8%89%E7%AD%89%E5%8F%B7/"/>
    <id>https://maxiuli.com/2017/04/22/等号、双等号和三等号/</id>
    <published>2017-04-22T16:21:20.000Z</published>
    <updated>2020-04-15T15:04:35.711Z</updated>
    
    <content type="html"><![CDATA[<p><a href title>一个等号是赋值操作，==先转换类型再比较，===先判断类型，如果不是同一类型直接为 false。</a></p>
<h4 id="双等号’-’"><a href="#双等号’-’" class="headerlink" title="双等号’==’"></a>双等号’==’</h4><blockquote>
<p>a == b</p>
<blockquote>
<p>如果 a、b 类型相等，就判断两个值是否相等，相等返回 true 不等返回 false<br>如果 a、b 类型不能等，根据下面规则进行类型转换再比较：</p>
</blockquote>
</blockquote>
<pre><code>如果一个是null、一个是undefined，那么返回true。
如果一个是字符串，一个是数值，把字符串转换成数值再进行比较。
如果任一值是 true，把它转换成 1 再比较；如果任一值是 false，把它转换成 0 再比较。
如果一个是对象，另一个是数值或字符串，把对象转换成基础类型的值再比较。
任何其他组合，都返回false。
</code></pre><h4 id="三等号’-’"><a href="#三等号’-’" class="headerlink" title="三等号’===’"></a>三等号’===’</h4><blockquote>
<p>a === b</p>
<blockquote>
<p>如果类型不同，直接返回 false<br>如果两个都是数值，并且是同一个值，那么返回 true<br>如果两个都是字符串，每个位置的字符都一样，那么返回 true；否则返回 false。<br>如果两个值都是 true，或者都是 false，那么返回 true。<br>如果两个值都引用同一个对象或函数，那么返回 true；否则 false。<br>如果两个值都是 null，或者都是 undefined，那么返回 true。</p>
</blockquote>
</blockquote>
<a id="more"></a>
<p>文章参考<a href="https://www.jsjtt.com/webkaifa/javaScript/37.html" target="_blank" rel="noopener">js 一个等号”=” 二个等号”==” 三个等号”===” 的区别</a></p>
<blockquote>
<p>这周三被虐了，宝宝不服！哼~</p>
</blockquote>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href title&gt;一个等号是赋值操作，==先转换类型再比较，===先判断类型，如果不是同一类型直接为 false。&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&quot;双等号’-’&quot;&gt;&lt;a href=&quot;#双等号’-’&quot; class=&quot;headerlink&quot; title=&quot;双等号’==’&quot;&gt;&lt;/a&gt;双等号’==’&lt;/h4&gt;&lt;blockquote&gt;
&lt;p&gt;a == b&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;如果 a、b 类型相等，就判断两个值是否相等，相等返回 true 不等返回 false&lt;br&gt;如果 a、b 类型不能等，根据下面规则进行类型转换再比较：&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;pre&gt;&lt;code&gt;如果一个是null、一个是undefined，那么返回true。
如果一个是字符串，一个是数值，把字符串转换成数值再进行比较。
如果任一值是 true，把它转换成 1 再比较；如果任一值是 false，把它转换成 0 再比较。
如果一个是对象，另一个是数值或字符串，把对象转换成基础类型的值再比较。
任何其他组合，都返回false。
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&quot;三等号’-’&quot;&gt;&lt;a href=&quot;#三等号’-’&quot; class=&quot;headerlink&quot; title=&quot;三等号’===’&quot;&gt;&lt;/a&gt;三等号’===’&lt;/h4&gt;&lt;blockquote&gt;
&lt;p&gt;a === b&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;如果类型不同，直接返回 false&lt;br&gt;如果两个都是数值，并且是同一个值，那么返回 true&lt;br&gt;如果两个都是字符串，每个位置的字符都一样，那么返回 true；否则返回 false。&lt;br&gt;如果两个值都是 true，或者都是 false，那么返回 true。&lt;br&gt;如果两个值都引用同一个对象或函数，那么返回 true；否则 false。&lt;br&gt;如果两个值都是 null，或者都是 undefined，那么返回 true。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="javascript" scheme="https://maxiuli.com/tags/javascript/"/>
    
  </entry>
  
  <entry>
    <title>如何使json的key值是变量</title>
    <link href="https://maxiuli.com/2017/04/22/json%E7%9A%84key%E6%98%AF%E5%8F%98%E9%87%8F/"/>
    <id>https://maxiuli.com/2017/04/22/json的key是变量/</id>
    <published>2017-04-22T14:45:14.000Z</published>
    <updated>2020-04-15T15:04:35.711Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p>var stu = {};<br>var attr = “name”<br>stu.attr = “mary”  // stu = {attr: “mary”}<br>var stu[attr] = “mary”; // stu = {name: “mary”}</p>
</blockquote>
<h6 id="如果看到这里看明白了下边就不用看了。恩"><a href="#如果看到这里看明白了下边就不用看了。恩" class="headerlink" title="如果看到这里看明白了下边就不用看了。恩"></a>如果看到这里看明白了下边就不用看了。恩</h6><a id="more"></a>
<p>首先，json是什么呢？</p>
<p>JSON(JavaScript Object Notation, JS 对象标记) 是一种轻量级的数据交换格式。它基于 ECMAScript 规范的一个子集，采用完全独立于编程语言的文本格式来存储和表示数据。简洁和清晰的层次结构使得 JSON 成为理想的数据交换语言。易于人阅读和编写，同时也易于机器解析和生成，并有效地提升网络传输效率。</p>
<h4 id="·JSON语法规则"><a href="#·JSON语法规则" class="headerlink" title="·JSON语法规则"></a>·JSON语法规则</h4><p>在 JS 语言中，一切都是对象。因此，任何支持的类型都可以通过 JSON 来表示，例如字符串、数字、对象、数组等。但是对象和数组是比较特殊且常用的两种类型：</p>
<ul>
<li>对象表示为键值对</li>
<li>数据由逗号分隔</li>
<li>花括号保存对象</li>
<li>方括号保存数组</li>
</ul>
<p>举个栗子</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> stu = &#123;<span class="string">"firstName"</span>: <span class="string">"John"</span>&#125;</span><br><span class="line"><span class="keyword">var</span> stu = &#123;firstName = <span class="string">"John"</span>&#125;</span><br></pre></td></tr></table></figure>
<h4 id="·JSON与JS对象的关系"><a href="#·JSON与JS对象的关系" class="headerlink" title="·JSON与JS对象的关系"></a>·JSON与JS对象的关系</h4><p>JSON是JS对象的字符串表示法，它使用文本表示一个JS对象的信息，本质是一个字符串。</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> obj = &#123;<span class="attr">a</span>: <span class="string">'Hello'</span>, <span class="attr">b</span>: <span class="string">'World'</span>&#125;; <span class="comment">//这是一个对象，注意键名也是可以使用引号包裹的</span></span><br><span class="line"><span class="keyword">var</span> json = <span class="string">'&#123;"a": "Hello", "b": "World"&#125;'</span>; <span class="comment">//这是一个 JSON 字符串，本质是一个字符串</span></span><br><span class="line"><span class="comment">//对象转为和JSON字符串</span></span><br><span class="line"><span class="keyword">var</span> json = <span class="built_in">JSON</span>.stringify(&#123;<span class="attr">a</span>: <span class="string">'Hello'</span>, <span class="attr">b</span>: <span class="string">'World'</span>&#125;); <span class="comment">//结果是 '&#123;"a": "Hello", "b": "World"&#125;'</span></span><br><span class="line"><span class="comment">//JSON字符串转换为对象</span></span><br><span class="line"><span class="keyword">var</span> obj = <span class="built_in">JSON</span>.parse(<span class="string">'&#123;"a": "Hello", "b": "World"&#125;'</span>); <span class="comment">//结果是 &#123;a: 'Hello', b: 'World'&#125;</span></span><br></pre></td></tr></table></figure>
<h4 id="·JSON属性获取和设置"><a href="#·JSON属性获取和设置" class="headerlink" title="·JSON属性获取和设置"></a>·JSON属性获取和设置</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">var stu = &#123;name: &quot;mary&quot;,age:18&#125;;  //创建一个学生对象</span><br><span class="line">console.log(stu.name); //输出学生的姓名 用&apos;.&apos;获取属性</span><br><span class="line">stu.age = 19;  //第二年学生长了一岁</span><br><span class="line">console.log(stu.age);  //这时输出19</span><br><span class="line">var teacher = &#123;&#125;; //新建一个老师</span><br><span class="line">teacher.name = &quot;jack&quot;; //虽然原来没有名字，但直接写就可以</span><br><span class="line">// !!!</span><br><span class="line">console.log(teacher[&apos;name&apos;]);  //其实这样也是可以的 [] 中括号里为属性名称</span><br></pre></td></tr></table></figure>
<p>总结就是获取属性用’.’或者’[]’来获取属性的值~是不是感觉’[]’不如’.’跟方便，其实中括号还有个很有用的地方，这才是今天的重点~</p>
<p>铛-铛-铛- 敲黑板~</p>
<p>现在问题来了，学生的属性已知的，但如果是变量呢~？例如下面这样</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">var stu = &#123;&#125;;</span><br><span class="line">var attr1 = &quot;name&quot;;</span><br><span class="line">var attr2 = &quot;age&quot;;</span><br><span class="line">stu.attr1 = &quot;mary&quot;;</span><br><span class="line">stu.attr2 = 18;</span><br><span class="line">console.log(stu);</span><br></pre></td></tr></table></figure>
<p>这段代码放到控制台你会发现输出是这样的 {attr1: “mary”, attr2: 18}<br>它根本不把”name”,”age”放在眼里，那我们的应该怎么办呢?<br>这样中括号就派上用场了</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">var stu = &#123;&#125;;</span><br><span class="line">var attr1 = &quot;name&quot;;</span><br><span class="line">var attr2 = &quot;age&quot;;</span><br><span class="line">stu[attr1] = &quot;mary&quot;;</span><br><span class="line">stu[attr2] = 18;</span><br><span class="line">console.log(stu);</span><br></pre></td></tr></table></figure>
<p>这样在控制台输出的将会是{name: “mary”, age: 18}</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">var stu = &#123;&#125;;</span><br><span class="line">var attr1 = &quot;name&quot;;</span><br><span class="line">var attr2 = &quot;age&quot;;</span><br><span class="line">stu[&apos;attr1&apos;] = &quot;mary&quot;;</span><br><span class="line">stu[&apos;attr2&apos;] = 18;</span><br><span class="line">console.log(stu);</span><br></pre></td></tr></table></figure>
<p>如果这样呢？又打回原形了~{attr1: “mary”, attr2: 18}<br>所以，这样就容易明白了，attr1不加引号为变量，如果加引号将会视为字符串，那就和上边’.’一样了</p>
<p>其实最后这两段代码才是我想说的重点，如何在key值是变量的时候操作json，但写的时候发现，直接写很突兀，就顺带复习一下这么多~有的资料是在百度百科上找到，有的是自己举得例子，有不正确的地方大家告诉我喔~邮箱：<a>maxiuli95@Gmail.com</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;var stu = {};&lt;br&gt;var attr = “name”&lt;br&gt;stu.attr = “mary”  // stu = {attr: “mary”}&lt;br&gt;var stu[attr] = “mary”; // stu = {name: “mary”}&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h6 id=&quot;如果看到这里看明白了下边就不用看了。恩&quot;&gt;&lt;a href=&quot;#如果看到这里看明白了下边就不用看了。恩&quot; class=&quot;headerlink&quot; title=&quot;如果看到这里看明白了下边就不用看了。恩&quot;&gt;&lt;/a&gt;如果看到这里看明白了下边就不用看了。恩&lt;/h6&gt;
    
    </summary>
    
    
      <category term="javascript" scheme="https://maxiuli.com/tags/javascript/"/>
    
  </entry>
  
  <entry>
    <title>JavaScript操作数组</title>
    <link href="https://maxiuli.com/2017/03/05/JS%E6%95%B0%E7%BB%84%E6%93%8D%E4%BD%9C/"/>
    <id>https://maxiuli.com/2017/03/05/JS数组操作/</id>
    <published>2017-03-05T13:31:00.000Z</published>
    <updated>2020-04-15T15:04:35.711Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">一般用到的就是遍历数组取值完成数据渲染，突然发现不记得数组操作了~学！</span><br></pre></td></tr></table></figure>
<blockquote>
<h4 id="1-数组的新建"><a href="#1-数组的新建" class="headerlink" title="1 数组的新建"></a>1 数组的新建</h4></blockquote>
<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arrayObj = <span class="keyword">new</span> <span class="built_in">Array</span>();　<span class="comment">//创建一个数组</span></span><br><span class="line"><span class="keyword">var</span> arrayObj = <span class="keyword">new</span> <span class="built_in">Array</span>([size]);　<span class="comment">//创建一个数组并指定长度，注意不是上限，是长度</span></span><br><span class="line"><span class="keyword">var</span> arrayObj = <span class="keyword">new</span> <span class="built_in">Array</span>([element0[, element1[, ...[, elementN]]]]);　<span class="comment">//创建一个数组并赋值</span></span><br></pre></td></tr></table></figure>
<p>第二种方法虽然指定了数组的长度，但数组的长度是可变的，指定了数组长度为 5，当存储 6 个元素时，数组长度即为 6。</p>
<a id="more"></a>
<blockquote>
<h4 id="2-数组元素的访问"><a href="#2-数组元素的访问" class="headerlink" title="2 数组元素的访问"></a>2 数组元素的访问</h4></blockquote>
<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> testGetArrValue = arrayObj[i];  <span class="comment">//获取元素的值</span></span><br><span class="line"><span class="keyword">var</span> arrObj[i] = <span class="string">"这是元素的值"</span>;    <span class="comment">//给数组元素赋值</span></span><br></pre></td></tr></table></figure>
<pre><code>i是数组的第（i+1）个元素，因为数组的下标是从0开始的
</code></pre><blockquote>
<h4 id="3-数组元素的添加"><a href="#3-数组元素的添加" class="headerlink" title="3 数组元素的添加"></a>3 数组元素的添加</h4></blockquote>
<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">arrObj.push(item);   <span class="comment">//将元素添加到数组的尾部，返回新数组的长度</span></span><br><span class="line">arrObj.unshift(item);   <span class="comment">//将元素添加到数组的头部，其他元素后移，返回新数组的长度</span></span><br><span class="line">arrObj.splice(index,howmany,item1,.....,itemX);  <span class="comment">//index（必填）添加/删除元素的起始位置，howmany（必填）添加/删除元素的个数，item(选填)如果有则添加，没有就删除</span></span><br></pre></td></tr></table></figure>
<blockquote>
<h4 id="4-数组元素的删除"><a href="#4-数组元素的删除" class="headerlink" title="4 数组元素的删除"></a>4 数组元素的删除</h4></blockquote>
<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">arrObj.pop(); <span class="comment">//移除最后一个元素，返回被除元素的值</span></span><br><span class="line">arrObj.shift(); <span class="comment">//移除第一个元素，返回移除元素的值，其他元素前移</span></span><br><span class="line">arrObj.splice(deletePos, deleteCount); <span class="comment">//deletePos移除位置，deleteCount移除的数量，返以数组的形式回移除的元素</span></span><br></pre></td></tr></table></figure>
<blockquote>
<h4 id="5-数组的截取与合并"><a href="#5-数组的截取与合并" class="headerlink" title="5 数组的截取与合并"></a>5 数组的截取与合并</h4></blockquote>
<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">arrObj.slice(start, end); <span class="comment">//以数组的形式返回从start到end的元素（不包括end），如果end不填则返回star后的所有元素</span></span><br><span class="line">arrObj.concat(item); <span class="comment">//arrObj与item合并为新的数组，item可以是元素、也可以是数组，返回合并后的新数组</span></span><br></pre></td></tr></table></figure>
<blockquote>
<h4 id="6-数组的拷贝"><a href="#6-数组的拷贝" class="headerlink" title="6 数组的拷贝"></a>6 数组的拷贝</h4></blockquote>
<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">arrayObj.slice(<span class="number">0</span>); <span class="comment">//返回数组的拷贝数组，注意是一个新的数组，不是指向</span></span><br><span class="line">arrayObj.concat(); <span class="comment">//返回数组的拷贝数组，注意是一个新的数组，不是指向</span></span><br></pre></td></tr></table></figure>
<blockquote>
<h4 id="7-数组的排序"><a href="#7-数组的排序" class="headerlink" title="7 数组的排序"></a>7 数组的排序</h4></blockquote>
<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">arrObj.reverse(); <span class="comment">//数组反转，返回数组地址</span></span><br><span class="line">arrObj.sort(); <span class="comment">//数组元素排序，返回数组地址</span></span><br></pre></td></tr></table></figure>
<blockquote>
<h4 id="8-数组元素字符串化"><a href="#8-数组元素字符串化" class="headerlink" title="8 数组元素字符串化"></a>8 数组元素字符串化</h4></blockquote>
<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">arrayObj.join(separator); <span class="comment">//返回字符串，这个字符串将数组的每一个元素值连接在一起，中间用 separator 隔开。</span></span><br><span class="line">toLocaleString 、toString 、valueOf：可以看作是join的特殊用法，不常用</span><br></pre></td></tr></table></figure>
<blockquote>
<h4 id="9-数组的三个属性"><a href="#9-数组的三个属性" class="headerlink" title="9 数组的三个属性"></a>9 数组的三个属性</h4></blockquote>
<ul>
<li><p>length :数组元素的个数，数组的长度是可定义的，但它是可变的</p>
</li>
<li><p>prototype :返回对象类型原型的引用。prototype 属性是 object 共有的。<br>objectName.prototype<br>objectName 参数是 object 对象的名称</p>
</li>
<li><p>constructor :表示创建对象的函数。</p>
</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">文章参考https://blog.csdn.net/xcxinghai/article/details/13502583</span><br></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;一般用到的就是遍历数组取值完成数据渲染，突然发现不记得数组操作了~学！&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;h4 id=&quot;1-数组的新建&quot;&gt;&lt;a href=&quot;#1-数组的新建&quot; class=&quot;headerlink&quot; title=&quot;1 数组的新建&quot;&gt;&lt;/a&gt;1 数组的新建&lt;/h4&gt;&lt;/blockquote&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; arrayObj = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;Array&lt;/span&gt;();　&lt;span class=&quot;comment&quot;&gt;//创建一个数组&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; arrayObj = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;Array&lt;/span&gt;([size]);　&lt;span class=&quot;comment&quot;&gt;//创建一个数组并指定长度，注意不是上限，是长度&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; arrayObj = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;Array&lt;/span&gt;([element0[, element1[, ...[, elementN]]]]);　&lt;span class=&quot;comment&quot;&gt;//创建一个数组并赋值&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;第二种方法虽然指定了数组的长度，但数组的长度是可变的，指定了数组长度为 5，当存储 6 个元素时，数组长度即为 6。&lt;/p&gt;
    
    </summary>
    
    
      <category term="javascript" scheme="https://maxiuli.com/tags/javascript/"/>
    
  </entry>
  
  <entry>
    <title>2016年终总结</title>
    <link href="https://maxiuli.com/2017/02/10/2016%E5%B9%B4%E7%BB%88%E6%80%BB%E7%BB%93/"/>
    <id>https://maxiuli.com/2017/02/10/2016年终总结/</id>
    <published>2017-02-10T20:03:00.000Z</published>
    <updated>2020-04-15T15:04:35.711Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p>搭建了博客<br>记录了<a href="https://github.com/maxxiaobao/Come-on/blob/master/My2016.md" target="_blank" rel="noopener">2016</a><br>找到了实习</p>
</blockquote>
<p>这是这一年的第一个工作周的周六，再不写年终总结 2017 二月就要过完了~2016 是我过得很累的一年，身体也累心也累~因为这一年总是心慌慌，从来不长痘的我今年爆痘~！我哈哈哈</p>
<a id="more"></a>
<p>2016 的上半年是我大三的下半学年，当时学习前端还是很积极的，因为想要在暑假找一份实习，上半一直很担心，知道下半年要去基地，知道自己学校背景不够硬参加校招很吃力，所以一直都是心慌慌的。上半年的我无论干什么都好，其实还是一直有保持学习的~在网上参加百度前端学院，好的时候一天两个任务，吃力的时候两到三天一个任务，陆陆续续完成 40 个任务。</p>
<p>很快暑假到来了，学校放假晚还开学早，一个月的实习生谁会要~~~？当时大哥哥说可以去成都，当<br>时觉得到了那里吃喝住好麻烦的，现在想想真的好后悔，当时去了，可能就是另一个样子了，但是世上<br>没有卖后悔药的呀~一切都是最好的安排。在家学习简直就是开玩笑，所以暑假也是晃晃悠悠的过了一个月，我一直心慌慌的好处就是我时刻准备着，所以简历早早的就写好了~为了应对到招聘要求每人都要有一套正装一双高跟鞋，当时觉得很多余，现在想想，真的是太重要了！</p>
<p>很快暑假过完了（毕竟只有一个月的暑假），回青岛后的学习有时候真的是很应付，因为最初老师讲的知识我王原来都讲过了，到后来有个女老师讲还原 PSD 图还是很好的，那个时候学会了简单的使用 PS，在青软待了将近一个月，然后就有公司来招人了，迎来了第一次面试，紧张但又兴奋，经过三次面试和一次电话面试成功拿到了 offer，心里毛毛的，后来陆陆续续又来了很多家，也拿了几个，自己不知道如何做决定，说白了还是不够勇敢、没有主见，因为这个原因我觉得我当时已经把很多机会错过了，记得当时不知道该如何下决定，周边的人还总是说些什么，搞得我跟我爸打电话还哭了一次（这句写出来好丢人，但不写忘了怎么办:-D）在这里告诉你们一个真理，没有什么事是回家一趟解决不了的，如果有那就多呆几天:-D 回家的时候整好是中秋，在家呆了几天做了决定，然后就在国庆时到了上海。</p>
<p>上海有好几个亲戚，来的这里真的很麻烦他们，真的。来到上海时家里人特别不放心，我当时想一个人一辈子吃的苦是有限的，这是我现在必须经历的，人家那些没有亲戚的自己吃苦，我这些苦现在不吃以后也得受阿~但话说回来，如果当时没我哥带我我可能会很惨~~~/(ㄒ o ㄒ)/是距离上班前几天到的上海，到了后还是玩了几天的南京路步行街、外滩、人民广场阿（全是人）10 月 8 正式上班了~</p>
<p>刚到的时候什么也不知道，什么也不懂，问也不知道该怎么开口~于是问师父我有什么可以做的，师父让我写了一个表格，然后两个表格，然后一个页面，慢慢的终于上手了~在后来的日子里真的学会了 ajax，明白了什么是异步加载，明白了什么叫数据渲染，学习了开始用新工具 IDEA，学习 vm 模板数据渲染，由于项目中用到很多弹框，所以用 layer 插件也很很熟练，jQuery 已经用的比较熟练原来想的真的太简单了，现在才开始明白点什么叫前端。这次真的接触到项目，感觉除了技术以外，更应该细心，从用户体验出发，学着让代码跟简洁，性能更优化~测试姐姐给我测出那些 BUG 来，我有时候真的是不愿意承认，为什么这种问题也会有，这种问题也会出现？（捂脸）</p>
<p>getList</p>
<blockquote>
<p>新工具 IDEA、RAP、Zeplin<br>插件 eCharts、layer、weiUI<br>框架 jQuery(ajax 熟练)、BootStrap</p>
</blockquote>
<p>新的一年再接再厉，学习更多的技术，get 更多的技能！<br>toDoList</p>
  <li>学习vue，webpack多看慕课多了解新技术</li><br>  <li>一周总结一个知识点</li><br>  <li>一周看一场电影</li><br>  <li>把读书这件事给捡起来</li><br>  <li>锻jian炼fei身体呀</li><br>  <li>坚持记录2017</li><br>  <li style="text-decoration:line-through;">把王叔叔拿下</li>

<blockquote>
<p>附上<a href="https://www.cnblogs.com/maxiaobao/p/5185535.html" target="_blank" rel="noopener">2015 年总结+2016 年计划</a></p>
</blockquote>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;搭建了博客&lt;br&gt;记录了&lt;a href=&quot;https://github.com/maxxiaobao/Come-on/blob/master/My2016.md&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;2016&lt;/a&gt;&lt;br&gt;找到了实习&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;这是这一年的第一个工作周的周六，再不写年终总结 2017 二月就要过完了~2016 是我过得很累的一年，身体也累心也累~因为这一年总是心慌慌，从来不长痘的我今年爆痘~！我哈哈哈&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>JavaScript事件大全</title>
    <link href="https://maxiuli.com/2016/10/20/JavaScript%E4%BA%8B%E4%BB%B6/"/>
    <id>https://maxiuli.com/2016/10/20/JavaScript事件/</id>
    <published>2016-10-20T00:00:00.000Z</published>
    <updated>2020-04-15T15:04:35.711Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<h4 id="一般事件"><a href="#一般事件" class="headerlink" title="一般事件"></a>一般事件</h4></blockquote>
<ul><br>    <li><strong>onClick——</strong>鼠标点击事件，多用在某个对象控制的范围内的鼠标点击</li><br>    <li><strong>onDblClick——</strong>鼠标双击事件</li><br>    <li><strong>onMouseDown——</strong>鼠标上的按钮被按下了</li><br>    <li><strong>onMouseUp——</strong>鼠标按下后，松开时激发的事件</li><br>    <li><strong>onMouseOver——</strong>当鼠标移动到某对象范围的上方时触发的事件</li><br>    <li><strong>onMouseMove——</strong>鼠标移动时触发的事件</li><br>    <li><strong>onMouseOut——</strong>当鼠标离开某对象范围时触发的事件</li><br>    <li><strong>onKeyPress——</strong>当键盘上的某个键被按下并且释放时触发的事件.[注意:页面内必须有被聚焦的对象]</li><br>    <li><strong>onKeyDown——</strong>当键盘上某个按键被按下时触发的事件[注意:页面内必须有被聚焦的对象]</li><br>    <li><strong>onKeyUp——</strong>当键盘上某个按键被按放开时触发的事件[注意:页面内必须有被聚焦的对象]</li><br></ul><br><a id="more"></a><br>&gt; #### 页面相关事件<br><br><ul><br>    <li><strong>onAbort——</strong>图片在下载时被用户中断</li><br>    <li><strong>onBeforeUnload——</strong>当前页面的内容将要被改变时触发的事件</li><br>    <li><strong>onError——</strong>捕抓当前页面因为某种原因而出现的错误，如脚本错误与外部数据引用的错误</li><br>    <li><strong>onLoad——</strong>页面内空完成传送到浏览器时触发的事件，包括外部文件引入完成</li><br>    <li><strong>onMove——</strong>浏览器的窗口被移动时触发的事件</li><br>    <li><strong>onResize——</strong>当浏览器的窗口大小被改变时触发的事件</li><br>    <li><strong>onScroll——</strong>浏览器的滚动条位置发生变化时触发的事件</li><br>    <li><strong>onStop——</strong>浏览器的停止按钮被按下时触发的事件或者正在下载的文件被中断</li><br>    <li><strong>onReset——</strong>当表单中RESET的属性被激发时触发的事件</li><br>    <li><strong>onSubmit——</strong>一个表单被递交时触发的事件</li><br></ul>

<blockquote>
<h4 id="表单相关事件"><a href="#表单相关事件" class="headerlink" title="表单相关事件"></a>表单相关事件</h4></blockquote>
<ul><br>    <li><strong>onBlur——</strong>当前元素失去焦点时触发的事件 [鼠标与键盘的触发均可]</li><br>    <li><strong>onChange——</strong>当前元素失去焦点并且元素的内容发生改变而触发的事件 [鼠标与键盘的触发均可]</li><br>    <li><strong>onFocus——</strong>当某个元素获得焦点时触发的事件</li><br></ul>

<blockquote>
<h4 id="滚动字幕事件"><a href="#滚动字幕事件" class="headerlink" title="滚动字幕事件"></a>滚动字幕事件</h4></blockquote>
<li><strong>onBounce——</strong>在Marquee内的内容移动至Marquee显示范围之外时触发的事件</li><br><li><strong>onFinish——</strong>当Marquee元素完成需要显示的内容后触发的事件</li><br><li><strong>onStart——</strong>当Marquee元素开始显示内容时触发的事件</li>

<blockquote>
<h4 id="编辑事件"><a href="#编辑事件" class="headerlink" title="编辑事件"></a>编辑事件</h4></blockquote>
<ul><br>    <li><strong>onBeforeCopy——</strong>当页面当前的被选择内容将要复制到浏览者系统的剪贴板前触发的事件</li><br>     <li><strong>onBeforeCut——</strong>当页面中的一部分或者全部的内容将被移离当前页面[剪贴]并移动到浏览者的系统剪</li><br></ul>

<blockquote>
<h4 id="数据绑定"><a href="#数据绑定" class="headerlink" title="数据绑定"></a>数据绑定</h4></blockquote>
<ul><br>    <li><strong>onAfterUpdate——</strong>当数据完成由数据源到对象的传送时触发的事件</li><br>    <li><strong>onCellChange——</strong>当数据来源发生变化时</li><br>    <li><strong>onDataAvailable——</strong>当数据接收完成时触发事件</li><br>    <li><strong>onDatasetChanged——</strong>数据在数据源发生变化时触发的事件</li><br></ul>

<blockquote>
<h4 id="外部事件"><a href="#外部事件" class="headerlink" title="外部事件"></a>外部事件</h4></blockquote>
<ul><br>    <li><strong>onAfterPrint——</strong>当文档被打印后触发的事件</li><br>    <li><strong>onBeforePrint——</strong>当文档即将打印时触发的事件</li><br>    <li><strong>onFilterChange——</strong>当某个对象的滤镜效果发生变化时触发的事件</li><br>    <li><strong>onPropertyChange——</strong>当对象的属性之一发生变化时触发的事件</li><br>    <li><strong>onReadyStateChange——</strong>当对象的初始化属性值发生变化时触发</li><br></ul>

<h6>突然发现经常用到触发事件，就总结了一下~<a href="https://www.jb51.net/article/28772.htm" target="_blank" rel="noopener">文章参考</a></h6>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;h4 id=&quot;一般事件&quot;&gt;&lt;a href=&quot;#一般事件&quot; class=&quot;headerlink&quot; title=&quot;一般事件&quot;&gt;&lt;/a&gt;一般事件&lt;/h4&gt;&lt;/blockquote&gt;
&lt;ul&gt;&lt;br&gt;    &lt;li&gt;&lt;strong&gt;onClick——&lt;/strong&gt;鼠标点击事件，多用在某个对象控制的范围内的鼠标点击&lt;/li&gt;&lt;br&gt;    &lt;li&gt;&lt;strong&gt;onDblClick——&lt;/strong&gt;鼠标双击事件&lt;/li&gt;&lt;br&gt;    &lt;li&gt;&lt;strong&gt;onMouseDown——&lt;/strong&gt;鼠标上的按钮被按下了&lt;/li&gt;&lt;br&gt;    &lt;li&gt;&lt;strong&gt;onMouseUp——&lt;/strong&gt;鼠标按下后，松开时激发的事件&lt;/li&gt;&lt;br&gt;    &lt;li&gt;&lt;strong&gt;onMouseOver——&lt;/strong&gt;当鼠标移动到某对象范围的上方时触发的事件&lt;/li&gt;&lt;br&gt;    &lt;li&gt;&lt;strong&gt;onMouseMove——&lt;/strong&gt;鼠标移动时触发的事件&lt;/li&gt;&lt;br&gt;    &lt;li&gt;&lt;strong&gt;onMouseOut——&lt;/strong&gt;当鼠标离开某对象范围时触发的事件&lt;/li&gt;&lt;br&gt;    &lt;li&gt;&lt;strong&gt;onKeyPress——&lt;/strong&gt;当键盘上的某个键被按下并且释放时触发的事件.[注意:页面内必须有被聚焦的对象]&lt;/li&gt;&lt;br&gt;    &lt;li&gt;&lt;strong&gt;onKeyDown——&lt;/strong&gt;当键盘上某个按键被按下时触发的事件[注意:页面内必须有被聚焦的对象]&lt;/li&gt;&lt;br&gt;    &lt;li&gt;&lt;strong&gt;onKeyUp——&lt;/strong&gt;当键盘上某个按键被按放开时触发的事件[注意:页面内必须有被聚焦的对象]&lt;/li&gt;&lt;br&gt;&lt;/ul&gt;&lt;br&gt;
    
    </summary>
    
    
      <category term="JavaScript" scheme="https://maxiuli.com/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>文本框跟随鼠标移动</title>
    <link href="https://maxiuli.com/2016/08/10/%E6%96%87%E6%9C%AC%E6%A1%86%E8%B7%9F%E9%9A%8F%E9%BC%A0%E6%A0%87%E7%A7%BB%E5%8A%A8/"/>
    <id>https://maxiuli.com/2016/08/10/文本框跟随鼠标移动/</id>
    <published>2016-08-10T20:03:00.000Z</published>
    <updated>2020-04-15T15:04:35.711Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">关于这个知识点，我原来看过三遍总觉得自己学会了，今天再用发现还得查资料，这样可不行啊！</span><br></pre></td></tr></table></figure>
<h4 id="实现效果–-gt-查看效果："><a href="#实现效果–-gt-查看效果：" class="headerlink" title="实现效果–&gt;查看效果："></a>实现效果–&gt;<a href="https://maxiuli.com/LIFE/step3/task37/index.html">查看效果</a>：</h4><p>鼠标点击文本框的标题，文本框跟着鼠标移动，鼠标松开文本框不再移动。<br><img src="https://7xslws.com1.z0.glb.clouddn.com/QQ%E5%9B%BE%E7%89%8720160720193151.png"></p>
<h4 id="知识点："><a href="#知识点：" class="headerlink" title="知识点："></a>知识点：</h4><a id="more"></a>
<ul><br><li>event.clientX： 事件属性返回当事件被触发时鼠标指针向对于浏览器页面（或客户区）的水平坐标</li><br><li>event.clientY:事件属性返回当事件被触发时鼠标指针向对于浏览器页面（客户区）的垂直坐标。</li><br><li>offsetLeft:元素的左外边框到包含元素的左内边框的像素距离。<br></li><br><li>offsetLeft:元素的左外边框到包含元素的左内边框的像素距离。<br></li><br><li>offsetTop:元素的上外边框到包含元素的上内边框的像素距离。</li><br><li>onmousedown:鼠标按键按下事件</li><br><li>onmouseup:鼠标按键弹起事件</li><br><li>onmousemove:鼠标移动事件</li><br></ul>

<h4 id="整体思路"><a href="#整体思路" class="headerlink" title="整体思路"></a>整体思路</h4><p>(感觉一张好图胜过千言万语)<br><img src="https://7xslws.com1.z0.glb.clouddn.com/QQ%E5%9B%BE%E7%89%8720160720195603.png"></p>
<blockquote>
<p>鼠标点下的时候执行 ommousedown，计算 clientX，clientY,offsetLeft,offsetTop<br>（此时 clientX，clientY 是点击时的坐标）<br>求出 disX = clientX - offsetLeft,disY = clientY - offsetTop<br>执行 onmousemove，对弹框定位 left = clientX - disX，top = clientY - disY<br>（此时 clientX 和 clientY 是移动后的坐标，是随时变化的）</p>
</blockquote>
<h4 id="上代码"><a href="#上代码" class="headerlink" title="上代码"></a>上代码</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">move</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">	<span class="keyword">var</span> oTitle = <span class="built_in">document</span>.getElementById(<span class="string">"title"</span>);</span><br><span class="line">	<span class="comment">//点击时</span></span><br><span class="line">	oTitle.onmousedown = <span class="function"><span class="keyword">function</span>(<span class="params">event</span>) </span>&#123;</span><br><span class="line">		<span class="keyword">var</span> disX = event.clientX - tip.offsetLeft;</span><br><span class="line">		<span class="keyword">var</span> disY = event.clientY - tip.offsetTop;</span><br><span class="line">		<span class="comment">//移动</span></span><br><span class="line">		<span class="built_in">document</span>.onmousemove = <span class="function"><span class="keyword">function</span>(<span class="params">event</span>) </span>&#123;</span><br><span class="line">		tip.style.left = event.clientX + <span class="number">125</span> - x + <span class="string">"px"</span>;</span><br><span class="line">		tip.style.top = event.clientY + <span class="number">75</span> - y + <span class="string">"px"</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">//弹起</span></span><br><span class="line">	oTitle.onmouseup = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">		<span class="built_in">document</span>.onmousemove = <span class="literal">null</span>;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h4><blockquote>
<p>在 JS 中修改关于尺寸时要加单位“px”<br>这样弹框可以拉到屏幕以外的位置，可以根据自己的需求更改<br>可以参考课程<a href="https://www.imooc.com/learn/138" target="_blank" rel="noopener">DOM 事件揭秘第四章</a></p>
</blockquote>
]]></content>
    
    <summary type="html">
    
      &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;关于这个知识点，我原来看过三遍总觉得自己学会了，今天再用发现还得查资料，这样可不行啊！&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;实现效果–-gt-查看效果：&quot;&gt;&lt;a href=&quot;#实现效果–-gt-查看效果：&quot; class=&quot;headerlink&quot; title=&quot;实现效果–&amp;gt;查看效果：&quot;&gt;&lt;/a&gt;实现效果–&amp;gt;&lt;a href=&quot;https://maxiuli.com/LIFE/step3/task37/index.html&quot;&gt;查看效果&lt;/a&gt;：&lt;/h4&gt;&lt;p&gt;鼠标点击文本框的标题，文本框跟着鼠标移动，鼠标松开文本框不再移动。&lt;br&gt;&lt;img src=&quot;https://7xslws.com1.z0.glb.clouddn.com/QQ%E5%9B%BE%E7%89%8720160720193151.png&quot;&gt;&lt;/p&gt;
&lt;h4 id=&quot;知识点：&quot;&gt;&lt;a href=&quot;#知识点：&quot; class=&quot;headerlink&quot; title=&quot;知识点：&quot;&gt;&lt;/a&gt;知识点：&lt;/h4&gt;
    
    </summary>
    
    
      <category term="JavaScript" scheme="https://maxiuli.com/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>firstChild和firstElementChild的区别</title>
    <link href="https://maxiuli.com/2016/06/20/firstChild%E5%92%8CfirstElementChild%E7%9A%84%E5%8C%BA%E5%88%AB/"/>
    <id>https://maxiuli.com/2016/06/20/firstChild和firstElementChild的区别/</id>
    <published>2016-06-20T20:03:00.000Z</published>
    <updated>2020-04-15T15:04:35.711Z</updated>
    
    <content type="html"><![CDATA[<p>在做百度前端学院任务二十二的时候遇到了一个问题，在遍历数组的时候发现节点找不到，后来对比别人的代码发现，是*firstChild*和*firstElementChild*在搞鬼~</p>
<h4 id="·firstChild-的用法"><a href="#·firstChild-的用法" class="headerlink" title="·firstChild 的用法"></a>·firstChild 的用法</h4><p>此属性用来获取指定元素的第一个子元素,如果元素不存在，则返回 null</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">var childnNode = Node.firstChild</span><br></pre></td></tr></table></figure>
<p>下面看例子</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id=&quot;main&quot;&gt;</span><br><span class="line">		&lt;span&gt;这是第一个span标签&lt;/span&gt;</span><br><span class="line">		&lt;span&gt;这是最后一个span标签&lt;/span&gt;</span><br><span class="line">	&lt;/div&gt;</span><br><span class="line">	&lt;div id=&quot;test&quot;&gt;&lt;/div&gt;</span><br><span class="line">	&lt;script type=&quot;text/javascript&quot;&gt;</span><br><span class="line">		var testnode = document.getElementById(&quot;test&quot;);</span><br><span class="line">		var mainnode = document.getElementById(&quot;main&quot;);</span><br><span class="line">		testnode.innerHTML = mainnode.firstChild;</span><br><span class="line">		//testnode.innerHTML = testnode.innerHTML + mainnode.firstElementChild;</span><br><span class="line">	&lt;/script&gt;</span><br></pre></td></tr></table></figure>
<a id="more"></a>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">这是第一个span标签 这是最后一个span标签</span><br><span class="line">[object Text]</span><br></pre></td></tr></table></figure>
<p>此时获取到的是一个文本节点，以上代码，在不同的浏览器中也会有不同的结果，在标准浏览器中，获取到的为一个文本节点，但是再 IE8 和 IE8 以下的版本，则会获取到 span 元素节点，因为标准浏览器会把空格和换行当作文本节点，而 IE8 和 IE8 以下的版本则会直接忽略。</p>
<h4 id="·firstElementChild-的用法"><a href="#·firstElementChild-的用法" class="headerlink" title="·firstElementChild 的用法"></a>·firstElementChild 的用法</h4><p>此属性返回当前元素的第一个元素子节点，如果没有元素子节点，则返回 null.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">var childnNode = Node.firstElementChild</span><br></pre></td></tr></table></figure>
<p>举例说明</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id=&quot;main&quot;&gt;</span><br><span class="line">		&lt;span&gt;这是第一个span标签&lt;/span&gt;</span><br><span class="line">		&lt;span&gt;这是最后一个span标签&lt;/span&gt;</span><br><span class="line">	&lt;/div&gt;</span><br><span class="line">	&lt;div id=&quot;test&quot;&gt;&lt;/div&gt;</span><br><span class="line">	&lt;script type=&quot;text/javascript&quot;&gt;</span><br><span class="line">		var testnode = document.getElementById(&quot;test&quot;);</span><br><span class="line">		var mainnode = document.getElementById(&quot;main&quot;);</span><br><span class="line">		//testnode.innerHTML = mainnode.firstChild;</span><br><span class="line">		testnode.innerHTML =mainnode.firstElementChild;</span><br><span class="line">	&lt;/script&gt;</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">显示结果：</span><br><span class="line">这是第一个span标签 这是最后一个span标签</span><br><span class="line">[object HTMLSpanElement]</span><br></pre></td></tr></table></figure>
<p>最终获取到的是 span 元素，这个应该更好理解。</p>
<blockquote>
<p>浏览器兼容:<br>（1）.IE9 和 IE9 以上浏览器支持此属性。<br>（2）.谷歌浏览器支持此属性。<br>（3）.火狐浏览器支持此属性。<br>（4）.opera 浏览器支持此属性。<br>（5）.safria 浏览器支持此属性。</p>
</blockquote>
<h4 id="·对比总结"><a href="#·对比总结" class="headerlink" title="·对比总结"></a>·对比总结</h4><p>（1）共同点都是获取父节点下的第一个节点对象。<br>（2）但是 firstElementChild 更傲娇，直接忽略文本节点（包括空格、回车）</p>
<p>文章参考：<a href="https://www.softwhy.com/forum.php?mod=viewthread&amp;tid=18854" target="_blank" rel="noopener">https://www.softwhy.com/forum.php?mod=viewthread&amp;tid=18854</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在做百度前端学院任务二十二的时候遇到了一个问题，在遍历数组的时候发现节点找不到，后来对比别人的代码发现，是*firstChild*和*firstElementChild*在搞鬼~&lt;/p&gt;
&lt;h4 id=&quot;·firstChild-的用法&quot;&gt;&lt;a href=&quot;#·firstChild-的用法&quot; class=&quot;headerlink&quot; title=&quot;·firstChild 的用法&quot;&gt;&lt;/a&gt;·firstChild 的用法&lt;/h4&gt;&lt;p&gt;此属性用来获取指定元素的第一个子元素,如果元素不存在，则返回 null&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;var childnNode = Node.firstChild&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;下面看例子&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;div id=&amp;quot;main&amp;quot;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;lt;span&amp;gt;这是第一个span标签&amp;lt;/span&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;lt;span&amp;gt;这是最后一个span标签&amp;lt;/span&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;lt;/div&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;lt;div id=&amp;quot;test&amp;quot;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;lt;script type=&amp;quot;text/javascript&amp;quot;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		var testnode = document.getElementById(&amp;quot;test&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		var mainnode = document.getElementById(&amp;quot;main&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		testnode.innerHTML = mainnode.firstChild;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		//testnode.innerHTML = testnode.innerHTML + mainnode.firstElementChild;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;lt;/script&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="javascript" scheme="https://maxiuli.com/tags/javascript/"/>
    
  </entry>
  
</feed>
